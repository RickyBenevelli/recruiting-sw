ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB338:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c ****  ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim6;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** int timer_lap = 0;
  53:Core/Src/main.c **** int flag_sensor = 0;
  54:Core/Src/main.c **** int flag_voltage = 0;
  55:Core/Src/main.c **** int flag_button = 0;
  56:Core/Src/main.c **** int flag_waiting_message = 0;
  57:Core/Src/main.c **** int flag_undervoltage = 0;
  58:Core/Src/main.c **** int flag_overvoltage = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** static void MX_GPIO_Init(void);
  65:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  66:Core/Src/main.c **** static void MX_ADC1_Init(void);
  67:Core/Src/main.c **** static void MX_TIM6_Init(void);
  68:Core/Src/main.c **** static void MX_ADC2_Init(void);
  69:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE END PFP */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  74:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  75:Core/Src/main.c **** enum state_machine {
  76:Core/Src/main.c ****     INIT_STATE = 0U,
  77:Core/Src/main.c ****     RUNNING_STATE,
  78:Core/Src/main.c ****     READING_STATE,
  79:Core/Src/main.c ****     WAITING_STATE,
  80:Core/Src/main.c ****     DANGER_STATE,
  81:Core/Src/main.c ****     STATE_LENGTH
  82:Core/Src/main.c **** } state;
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** char* state_names[STATE_LENGTH];
  85:Core/Src/main.c **** // volatile uint8_t state;
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 3


  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c ****   
  96:Core/Src/main.c ****   state_names[INIT_STATE] = "INIT_STATE";
  97:Core/Src/main.c ****   state_names[READING_STATE] = "READING STATE";
  98:Core/Src/main.c ****   char state_msg [30];
  99:Core/Src/main.c ****   uint16_t raw;
 100:Core/Src/main.c ****   char msg[50];
 101:Core/Src/main.c ****   char msg_voltage[50];
 102:Core/Src/main.c ****   char danger_message[50];
 103:Core/Src/main.c ****   float raw_to_gauss;
 104:Core/Src/main.c ****   state = INIT_STATE;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   uint16_t raw_voltage;
 107:Core/Src/main.c ****   float raw_voltage_volt;
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   // uint8_t waiting_message[100] = "(%lu)Board in waiting state - please press the emergency butto
 110:Core/Src/main.c ****   char waiting_message[100];
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 117:Core/Src/main.c ****   HAL_Init();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Configure the system clock */
 124:Core/Src/main.c ****   SystemClock_Config();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Initialize all configured peripherals */
 131:Core/Src/main.c ****   MX_GPIO_Init();
 132:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 133:Core/Src/main.c ****   MX_ADC1_Init();
 134:Core/Src/main.c ****   MX_TIM6_Init();
 135:Core/Src/main.c ****   MX_ADC2_Init();
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   //Start timer
 140:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim6);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 4


 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   { 
 148:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10, GPIO_PIN_SET);
 149:Core/Src/main.c ****     switch (state)
 150:Core/Src/main.c ****     {
 151:Core/Src/main.c ****     case READING_STATE:
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****       sprintf(state_msg,"\nState: %s \r\n", state_names[READING_STATE]);
 154:Core/Src/main.c ****       HAL_UART_Transmit(&hlpuart1, (uint8_t*)state_msg, strlen(state_msg), 10);
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****       //check if sensor is to be read
 157:Core/Src/main.c ****       if(flag_sensor == 1){
 158:Core/Src/main.c ****       
 159:Core/Src/main.c ****         HAL_ADC_Start(&hadc1);
 160:Core/Src/main.c ****         HAL_ADC_PollForConversion(&hadc1, 1); 
 161:Core/Src/main.c ****         raw = HAL_ADC_GetValue(&hadc1);
 162:Core/Src/main.c ****         raw_to_gauss = (((raw * 3.3)/ 4095) - 1.60)*1000/1.6; //TODO: change sensibility according 
 163:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****         // Convert to string and print
 166:Core/Src/main.c ****         sprintf(msg, "(%lu) Hall sensor:  %4.2f [GS]\r\n", HAL_GetTick()/10, raw_to_gauss);
 167:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg, strlen(msg), 10);
 168:Core/Src/main.c ****         flag_sensor = 0;
 169:Core/Src/main.c ****         }
 170:Core/Src/main.c ****         
 171:Core/Src/main.c ****       //check if voltage is to be read
 172:Core/Src/main.c ****       if(flag_voltage == 1){
 173:Core/Src/main.c ****         //read voltage
 174:Core/Src/main.c ****         HAL_ADC_Start(&hadc2);
 175:Core/Src/main.c ****         HAL_ADC_PollForConversion(&hadc2, 1); 
 176:Core/Src/main.c ****         raw_voltage = HAL_ADC_GetValue(&hadc2);
 177:Core/Src/main.c ****         raw_voltage_volt = (raw_voltage * 3.3) / 4095; //convert to volt
 178:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 179:Core/Src/main.c ****         
 180:Core/Src/main.c ****         sprintf(msg_voltage, "(%lu) Voltage:  %.3f [V]\r\n", HAL_GetTick()/10, raw_voltage_volt);
 181:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg_voltage, strlen(msg_voltage), 10);
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****         if(raw_voltage_volt < 1.8){
 184:Core/Src/main.c ****           state = DANGER_STATE;
 185:Core/Src/main.c ****           flag_undervoltage = 1;
 186:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_SET); //enable undervoltage led
 187:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET); //disable overvoltage led
 188:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n");
 189:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10); 
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****         } else if (raw_voltage_volt > 2.2){
 192:Core/Src/main.c ****           state = DANGER_STATE;
 193:Core/Src/main.c ****           flag_overvoltage = 1;
 194:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_SET); //enable overvoltage led
 195:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_RESET); //disable undervoltage led
 196:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n");
 197:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10);
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****         } else {
 200:Core/Src/main.c ****           flag_undervoltage = 0;
 201:Core/Src/main.c ****           flag_overvoltage = 0;
 202:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_RESET); //disable undervoltage led
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 5


 203:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET); //disable overvoltage led
 204:Core/Src/main.c ****         }
 205:Core/Src/main.c ****         flag_voltage = 0;
 206:Core/Src/main.c ****       }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****       state = RUNNING_STATE;
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****       break;
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****     case RUNNING_STATE:
 213:Core/Src/main.c ****       // sprintf(state_msg,"\nState: %s \r\n", state_names[RUNNING_STATE]);
 214:Core/Src/main.c ****       // HAL_UART_Transmit(&hlpuart1, (uint8_t*)state_msg, strlen(state_msg), 10);
 215:Core/Src/main.c ****       break;
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****     case WAITING_STATE:
 218:Core/Src/main.c ****       if(flag_waiting_message == 1){
 219:Core/Src/main.c ****         sprintf(waiting_message, "(%lu)Board in waiting state - please press the emergency button\r
 220:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)waiting_message, strlen(waiting_message), 10);
 221:Core/Src/main.c ****         flag_waiting_message = 0;
 222:Core/Src/main.c ****       }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****       break;
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****     case DANGER_STATE:
 227:Core/Src/main.c ****         if (flag_undervoltage){
 228:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n"); //TODO: controllare che funzio
 229:Core/Src/main.c ****         } else if (flag_overvoltage){
 230:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n"); //TODO: controllare che funzion
 231:Core/Src/main.c ****         }
 232:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10); 
 233:Core/Src/main.c ****       break;
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****     default:
 236:Core/Src/main.c ****       break;
 237:Core/Src/main.c ****     }
 238:Core/Src/main.c ****       
 239:Core/Src/main.c ****     /* USER CODE END WHILE */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 242:Core/Src/main.c ****   
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****     /* USER CODE END WHILE */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE END 3 */
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief System Clock Configuration
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** void SystemClock_Config(void)
 256:Core/Src/main.c **** {
 257:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 258:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 259:Core/Src/main.c **** 
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 6


 260:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 261:Core/Src/main.c ****   */
 262:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 265:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 266:Core/Src/main.c ****   */
 267:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 269:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 277:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 283:Core/Src/main.c ****   */
 284:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 285:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 286:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 287:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 289:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 292:Core/Src/main.c ****   {
 293:Core/Src/main.c ****     Error_Handler();
 294:Core/Src/main.c ****   }
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_ADC1_Init(void)
 303:Core/Src/main.c **** {
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 306:Core/Src/main.c **** 
 307:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   ADC_MultiModeTypeDef multimode = {0};
 310:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /** Common config
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 7


 317:Core/Src/main.c ****   */
 318:Core/Src/main.c ****   hadc1.Instance = ADC1;
 319:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 320:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 321:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 322:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 323:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 324:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 325:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 326:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 327:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 328:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 329:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 330:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 331:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 332:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 333:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 334:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 335:Core/Src/main.c ****   {
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   /** Configure the ADC multi-mode
 340:Core/Src/main.c ****   */
 341:Core/Src/main.c ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 342:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /** Configure Regular Channel
 348:Core/Src/main.c ****   */
 349:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 350:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 351:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 352:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 353:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 354:Core/Src/main.c ****   sConfig.Offset = 0;
 355:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****     Error_Handler();
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c **** }
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /**
 366:Core/Src/main.c ****   * @brief ADC2 Initialization Function
 367:Core/Src/main.c ****   * @param None
 368:Core/Src/main.c ****   * @retval None
 369:Core/Src/main.c ****   */
 370:Core/Src/main.c **** static void MX_ADC2_Init(void)
 371:Core/Src/main.c **** {
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 0 */
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c ****   /* USER CODE END ADC2_Init 0 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 1 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END ADC2_Init 1 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /** Common config
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c ****   hadc2.Instance = ADC2;
 386:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 387:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 388:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 389:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 390:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 391:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 392:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 393:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 394:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 395:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 396:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 397:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 398:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 399:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 400:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 401:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 402:Core/Src/main.c ****   {
 403:Core/Src/main.c ****     Error_Handler();
 404:Core/Src/main.c ****   }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****   /** Configure Regular Channel
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 409:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 410:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 411:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 412:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 413:Core/Src/main.c ****   sConfig.Offset = 0;
 414:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 415:Core/Src/main.c ****   {
 416:Core/Src/main.c ****     Error_Handler();
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c ****   /* USER CODE BEGIN ADC2_Init 2 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END ADC2_Init 2 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** /**
 425:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 426:Core/Src/main.c ****   * @param None
 427:Core/Src/main.c ****   * @retval None
 428:Core/Src/main.c ****   */
 429:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 430:Core/Src/main.c **** {
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 435:Core/Src/main.c **** 
 436:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 439:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 440:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 441:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 442:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 443:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 444:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 445:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 446:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 447:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 448:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 449:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 454:Core/Src/main.c ****   {
 455:Core/Src/main.c ****     Error_Handler();
 456:Core/Src/main.c ****   }
 457:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 458:Core/Src/main.c ****   {
 459:Core/Src/main.c ****     Error_Handler();
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 462:Core/Src/main.c ****   {
 463:Core/Src/main.c ****     Error_Handler();
 464:Core/Src/main.c ****   }
 465:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** }
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** /**
 472:Core/Src/main.c ****   * @brief TIM6 Initialization Function
 473:Core/Src/main.c ****   * @param None
 474:Core/Src/main.c ****   * @retval None
 475:Core/Src/main.c ****   */
 476:Core/Src/main.c **** static void MX_TIM6_Init(void)
 477:Core/Src/main.c **** {
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 0 */
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE END TIM6_Init 0 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 1 */
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****   /* USER CODE END TIM6_Init 1 */
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 10


 488:Core/Src/main.c ****   htim6.Instance = TIM6;
 489:Core/Src/main.c ****   htim6.Init.Prescaler = 1000-1;
 490:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 491:Core/Src/main.c ****   htim6.Init.Period = 8499;
 492:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 493:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****     Error_Handler();
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 498:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 499:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     Error_Handler();
 502:Core/Src/main.c ****   }
 503:Core/Src/main.c ****   /* USER CODE BEGIN TIM6_Init 2 */
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   /* USER CODE END TIM6_Init 2 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** }
 508:Core/Src/main.c **** 
 509:Core/Src/main.c **** /**
 510:Core/Src/main.c ****   * @brief GPIO Initialization Function
 511:Core/Src/main.c ****   * @param None
 512:Core/Src/main.c ****   * @retval None
 513:Core/Src/main.c ****   */
 514:Core/Src/main.c **** static void MX_GPIO_Init(void)
 515:Core/Src/main.c **** {
  28              		.loc 1 515 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 8AB0     		sub	sp, sp, #40
  39              		.cfi_def_cfa_offset 56
 516:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 516 3 view .LVU1
  41              		.loc 1 516 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
 517:Core/Src/main.c **** 
 518:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 519:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 519 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 519 3 view .LVU4
  51              		.loc 1 519 3 view .LVU5
  52 0010 2D4B     		ldr	r3, .L3
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 11


  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 519 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 519 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 519 3 view .LVU8
 520:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  64              		.loc 1 520 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 520 3 view .LVU10
  67              		.loc 1 520 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F02002 		orr	r2, r2, #32
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 520 3 view .LVU12
  72 002c DA6C     		ldr	r2, [r3, #76]
  73 002e 02F02002 		and	r2, r2, #32
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 520 3 view .LVU13
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 520 3 view .LVU14
 521:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  79              		.loc 1 521 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 521 3 view .LVU16
  82              		.loc 1 521 3 view .LVU17
  83 0036 DA6C     		ldr	r2, [r3, #76]
  84 0038 42F00102 		orr	r2, r2, #1
  85 003c DA64     		str	r2, [r3, #76]
  86              		.loc 1 521 3 view .LVU18
  87 003e DA6C     		ldr	r2, [r3, #76]
  88 0040 02F00102 		and	r2, r2, #1
  89 0044 0392     		str	r2, [sp, #12]
  90              		.loc 1 521 3 view .LVU19
  91 0046 039A     		ldr	r2, [sp, #12]
  92              	.LBE6:
  93              		.loc 1 521 3 view .LVU20
 522:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  94              		.loc 1 522 3 view .LVU21
  95              	.LBB7:
  96              		.loc 1 522 3 view .LVU22
  97              		.loc 1 522 3 view .LVU23
  98 0048 DA6C     		ldr	r2, [r3, #76]
  99 004a 42F00202 		orr	r2, r2, #2
 100 004e DA64     		str	r2, [r3, #76]
 101              		.loc 1 522 3 view .LVU24
 102 0050 DB6C     		ldr	r3, [r3, #76]
 103 0052 03F00203 		and	r3, r3, #2
 104 0056 0493     		str	r3, [sp, #16]
 105              		.loc 1 522 3 view .LVU25
 106 0058 049B     		ldr	r3, [sp, #16]
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 12


 107              	.LBE7:
 108              		.loc 1 522 3 view .LVU26
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 525:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 109              		.loc 1 525 3 view .LVU27
 110 005a 2246     		mov	r2, r4
 111 005c 2021     		movs	r1, #32
 112 005e 4FF09040 		mov	r0, #1207959552
 113 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 528:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_10|LED_undervoltage_Pin|LED_overvoltage_Pin, GPIO_PIN_RESET);
 115              		.loc 1 528 3 view .LVU28
 116 0066 194D     		ldr	r5, .L3+4
 117 0068 2246     		mov	r2, r4
 118 006a 4FF4E051 		mov	r1, #7168
 119 006e 2846     		mov	r0, r5
 120 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL1:
 529:Core/Src/main.c **** 
 530:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 531:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 122              		.loc 1 531 3 view .LVU29
 123              		.loc 1 531 23 is_stmt 0 view .LVU30
 124 0074 4FF40053 		mov	r3, #8192
 125 0078 0593     		str	r3, [sp, #20]
 532:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 126              		.loc 1 532 3 is_stmt 1 view .LVU31
 127              		.loc 1 532 24 is_stmt 0 view .LVU32
 128 007a 4FF48813 		mov	r3, #1114112
 129 007e 0693     		str	r3, [sp, #24]
 533:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 130              		.loc 1 533 3 is_stmt 1 view .LVU33
 131              		.loc 1 533 24 is_stmt 0 view .LVU34
 132 0080 0794     		str	r4, [sp, #28]
 534:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 133              		.loc 1 534 3 is_stmt 1 view .LVU35
 134 0082 05A9     		add	r1, sp, #20
 135 0084 2846     		mov	r0, r5
 136 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 537:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 138              		.loc 1 537 3 view .LVU36
 139              		.loc 1 537 23 is_stmt 0 view .LVU37
 140 008a 2023     		movs	r3, #32
 141 008c 0593     		str	r3, [sp, #20]
 538:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 538 3 is_stmt 1 view .LVU38
 143              		.loc 1 538 24 is_stmt 0 view .LVU39
 144 008e 0126     		movs	r6, #1
 145 0090 0696     		str	r6, [sp, #24]
 539:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 539 3 is_stmt 1 view .LVU40
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 13


 147              		.loc 1 539 24 is_stmt 0 view .LVU41
 148 0092 0794     		str	r4, [sp, #28]
 540:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 540 3 is_stmt 1 view .LVU42
 150              		.loc 1 540 25 is_stmt 0 view .LVU43
 151 0094 0894     		str	r4, [sp, #32]
 541:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 152              		.loc 1 541 3 is_stmt 1 view .LVU44
 153 0096 05A9     		add	r1, sp, #20
 154 0098 4FF09040 		mov	r0, #1207959552
 155 009c FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL3:
 542:Core/Src/main.c **** 
 543:Core/Src/main.c ****   /*Configure GPIO pins : PC10 LED_undervoltage_Pin LED_overvoltage_Pin */
 544:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|LED_undervoltage_Pin|LED_overvoltage_Pin;
 157              		.loc 1 544 3 view .LVU45
 158              		.loc 1 544 23 is_stmt 0 view .LVU46
 159 00a0 4FF4E053 		mov	r3, #7168
 160 00a4 0593     		str	r3, [sp, #20]
 545:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 545 3 is_stmt 1 view .LVU47
 162              		.loc 1 545 24 is_stmt 0 view .LVU48
 163 00a6 0696     		str	r6, [sp, #24]
 546:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 546 3 is_stmt 1 view .LVU49
 165              		.loc 1 546 24 is_stmt 0 view .LVU50
 166 00a8 0794     		str	r4, [sp, #28]
 547:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 167              		.loc 1 547 3 is_stmt 1 view .LVU51
 168              		.loc 1 547 25 is_stmt 0 view .LVU52
 169 00aa 0894     		str	r4, [sp, #32]
 548:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 170              		.loc 1 548 3 is_stmt 1 view .LVU53
 171 00ac 05A9     		add	r1, sp, #20
 172 00ae 2846     		mov	r0, r5
 173 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL4:
 549:Core/Src/main.c **** 
 550:Core/Src/main.c ****   /* EXTI interrupt init*/
 551:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 175              		.loc 1 551 3 view .LVU54
 176 00b4 2246     		mov	r2, r4
 177 00b6 2146     		mov	r1, r4
 178 00b8 2820     		movs	r0, #40
 179 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 180              	.LVL5:
 552:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 181              		.loc 1 552 3 view .LVU55
 182 00be 2820     		movs	r0, #40
 183 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 184              	.LVL6:
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** }
 185              		.loc 1 554 1 is_stmt 0 view .LVU56
 186 00c4 0AB0     		add	sp, sp, #40
 187              		.cfi_def_cfa_offset 16
 188              		@ sp needed
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 14


 189 00c6 70BD     		pop	{r4, r5, r6, pc}
 190              	.L4:
 191              		.align	2
 192              	.L3:
 193 00c8 00100240 		.word	1073876992
 194 00cc 00080048 		.word	1207961600
 195              		.cfi_endproc
 196              	.LFE338:
 198              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_TIM_PeriodElapsedCallback
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	HAL_TIM_PeriodElapsedCallback:
 206              	.LVL7:
 207              	.LFB339:
 555:Core/Src/main.c **** 
 556:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 557:Core/Src/main.c **** 
 558:Core/Src/main.c **** //function that is called every 50 ms
 559:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 560:Core/Src/main.c **** {
 208              		.loc 1 560 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 561:Core/Src/main.c ****   //toggle a pin for checking if the timer works
 562:Core/Src/main.c ****   // HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_10); 
 563:Core/Src/main.c ****   if (htim->Instance == TIM6){
 213              		.loc 1 563 3 view .LVU58
 214              		.loc 1 563 11 is_stmt 0 view .LVU59
 215 0000 0268     		ldr	r2, [r0]
 216              		.loc 1 563 6 view .LVU60
 217 0002 1F4B     		ldr	r3, .L12
 218 0004 9A42     		cmp	r2, r3
 219 0006 00D0     		beq	.L10
 220              	.L5:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****     if (((timer_lap % 4) == 0) && flag_button == 0 && (timer_lap != 0) ){ //&& (flag_undervoltage |
 566:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 567:Core/Src/main.c ****       state = READING_STATE;
 568:Core/Src/main.c ****     }
 569:Core/Src/main.c ****     if (((timer_lap % 7) == 0) && flag_button == 0 && (timer_lap != 0) ){ //&& (flag_undervoltage |
 570:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 571:Core/Src/main.c ****       state = READING_STATE;
 572:Core/Src/main.c ****     }
 573:Core/Src/main.c ****     if (flag_button == 1 && ((timer_lap % 10) == 0)){
 574:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 575:Core/Src/main.c ****     }
 576:Core/Src/main.c ****     timer_lap += 1;
 577:Core/Src/main.c ****   }
 578:Core/Src/main.c **** }
 221              		.loc 1 578 1 view .LVU61
 222 0008 7047     		bx	lr
 223              	.L10:
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 15


 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 224              		.loc 1 565 5 is_stmt 1 view .LVU62
 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 225              		.loc 1 565 26 is_stmt 0 view .LVU63
 226 000a 1E4B     		ldr	r3, .L12+4
 227 000c 1B68     		ldr	r3, [r3]
 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 228              		.loc 1 565 8 view .LVU64
 229 000e 13F0030F 		tst	r3, #3
 230 0012 09D1     		bne	.L7
 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 231              		.loc 1 565 47 discriminator 1 view .LVU65
 232 0014 1C4A     		ldr	r2, .L12+8
 233 0016 1268     		ldr	r2, [r2]
 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 234              		.loc 1 565 32 discriminator 1 view .LVU66
 235 0018 32B9     		cbnz	r2, .L7
 565:Core/Src/main.c ****       flag_sensor = 1; //flag for checking the sensor
 236              		.loc 1 565 52 discriminator 2 view .LVU67
 237 001a 2BB1     		cbz	r3, .L7
 566:Core/Src/main.c ****       state = READING_STATE;
 238              		.loc 1 566 7 is_stmt 1 view .LVU68
 566:Core/Src/main.c ****       state = READING_STATE;
 239              		.loc 1 566 19 is_stmt 0 view .LVU69
 240 001c 1B4A     		ldr	r2, .L12+12
 241 001e 0121     		movs	r1, #1
 242 0020 1160     		str	r1, [r2]
 567:Core/Src/main.c ****     }
 243              		.loc 1 567 7 is_stmt 1 view .LVU70
 567:Core/Src/main.c ****     }
 244              		.loc 1 567 13 is_stmt 0 view .LVU71
 245 0022 1B4A     		ldr	r2, .L12+16
 246 0024 0221     		movs	r1, #2
 247 0026 1170     		strb	r1, [r2]
 248              	.L7:
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 249              		.loc 1 569 5 is_stmt 1 view .LVU72
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 250              		.loc 1 569 21 is_stmt 0 view .LVU73
 251 0028 1A49     		ldr	r1, .L12+20
 252 002a 81FB0321 		smull	r2, r1, r1, r3
 253 002e 1944     		add	r1, r1, r3
 254 0030 DA17     		asrs	r2, r3, #31
 255 0032 C2EBA102 		rsb	r2, r2, r1, asr #2
 256 0036 C2EBC202 		rsb	r2, r2, r2, lsl #3
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 257              		.loc 1 569 8 view .LVU74
 258 003a 9342     		cmp	r3, r2
 259 003c 09D1     		bne	.L8
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 260              		.loc 1 569 47 discriminator 1 view .LVU75
 261 003e 124A     		ldr	r2, .L12+8
 262 0040 1268     		ldr	r2, [r2]
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
 263              		.loc 1 569 32 discriminator 1 view .LVU76
 264 0042 32B9     		cbnz	r2, .L8
 569:Core/Src/main.c ****       flag_voltage = 1; //flag for checking the voltage
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 16


 265              		.loc 1 569 52 discriminator 2 view .LVU77
 266 0044 2BB1     		cbz	r3, .L8
 570:Core/Src/main.c ****       state = READING_STATE;
 267              		.loc 1 570 7 is_stmt 1 view .LVU78
 570:Core/Src/main.c ****       state = READING_STATE;
 268              		.loc 1 570 20 is_stmt 0 view .LVU79
 269 0046 144A     		ldr	r2, .L12+24
 270 0048 0121     		movs	r1, #1
 271 004a 1160     		str	r1, [r2]
 571:Core/Src/main.c ****     }
 272              		.loc 1 571 7 is_stmt 1 view .LVU80
 571:Core/Src/main.c ****     }
 273              		.loc 1 571 13 is_stmt 0 view .LVU81
 274 004c 104A     		ldr	r2, .L12+16
 275 004e 0221     		movs	r1, #2
 276 0050 1170     		strb	r1, [r2]
 277              	.L8:
 573:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 278              		.loc 1 573 5 is_stmt 1 view .LVU82
 573:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 279              		.loc 1 573 21 is_stmt 0 view .LVU83
 280 0052 0D4A     		ldr	r2, .L12+8
 281 0054 1268     		ldr	r2, [r2]
 573:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 282              		.loc 1 573 8 view .LVU84
 283 0056 012A     		cmp	r2, #1
 284 0058 03D0     		beq	.L11
 285              	.L9:
 576:Core/Src/main.c ****   }
 286              		.loc 1 576 5 is_stmt 1 view .LVU85
 576:Core/Src/main.c ****   }
 287              		.loc 1 576 15 is_stmt 0 view .LVU86
 288 005a 0133     		adds	r3, r3, #1
 289 005c 094A     		ldr	r2, .L12+4
 290 005e 1360     		str	r3, [r2]
 291              		.loc 1 578 1 view .LVU87
 292 0060 D2E7     		b	.L5
 293              	.L11:
 573:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 294              		.loc 1 573 41 discriminator 1 view .LVU88
 295 0062 0E49     		ldr	r1, .L12+28
 296 0064 81FB0321 		smull	r2, r1, r1, r3
 297 0068 DA17     		asrs	r2, r3, #31
 298 006a C2EBA102 		rsb	r2, r2, r1, asr #2
 299 006e 02EB8202 		add	r2, r2, r2, lsl #2
 573:Core/Src/main.c ****       flag_waiting_message = 1; //flag for sending the waiting message
 300              		.loc 1 573 26 discriminator 1 view .LVU89
 301 0072 B3EB420F 		cmp	r3, r2, lsl #1
 302 0076 F0D1     		bne	.L9
 574:Core/Src/main.c ****     }
 303              		.loc 1 574 7 is_stmt 1 view .LVU90
 574:Core/Src/main.c ****     }
 304              		.loc 1 574 28 is_stmt 0 view .LVU91
 305 0078 094A     		ldr	r2, .L12+32
 306 007a 0121     		movs	r1, #1
 307 007c 1160     		str	r1, [r2]
 308 007e ECE7     		b	.L9
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 17


 309              	.L13:
 310              		.align	2
 311              	.L12:
 312 0080 00100040 		.word	1073745920
 313 0084 00000000 		.word	.LANCHOR0
 314 0088 00000000 		.word	.LANCHOR1
 315 008c 00000000 		.word	.LANCHOR2
 316 0090 00000000 		.word	.LANCHOR3
 317 0094 93244992 		.word	-1840700269
 318 0098 00000000 		.word	.LANCHOR4
 319 009c 67666666 		.word	1717986919
 320 00a0 00000000 		.word	.LANCHOR5
 321              		.cfi_endproc
 322              	.LFE339:
 324              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 325              		.align	1
 326              		.global	HAL_GPIO_EXTI_Callback
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	HAL_GPIO_EXTI_Callback:
 332              	.LVL8:
 333              	.LFB340:
 579:Core/Src/main.c **** 
 580:Core/Src/main.c **** //button interrupt
 581:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 334              		.loc 1 581 47 is_stmt 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 582:Core/Src/main.c ****     if(GPIO_Pin == GPIO_PIN_13) {
 338              		.loc 1 582 5 view .LVU93
 339              		.loc 1 582 7 is_stmt 0 view .LVU94
 340 0000 B0F5005F 		cmp	r0, #8192
 341 0004 00D0     		beq	.L22
 342 0006 7047     		bx	lr
 343              	.L22:
 581:Core/Src/main.c ****     if(GPIO_Pin == GPIO_PIN_13) {
 344              		.loc 1 581 47 view .LVU95
 345 0008 08B5     		push	{r3, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 583:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5); 
 349              		.loc 1 583 7 is_stmt 1 view .LVU96
 350 000a 2021     		movs	r1, #32
 351 000c 4FF09040 		mov	r0, #1207959552
 352              	.LVL9:
 353              		.loc 1 583 7 is_stmt 0 view .LVU97
 354 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 355              	.LVL10:
 584:Core/Src/main.c ****       flag_button = !flag_button;
 356              		.loc 1 584 7 is_stmt 1 view .LVU98
 357              		.loc 1 584 21 is_stmt 0 view .LVU99
 358 0014 074A     		ldr	r2, .L23
 359 0016 1368     		ldr	r3, [r2]
 360 0018 B3FA83F3 		clz	r3, r3
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 18


 361 001c 5B09     		lsrs	r3, r3, #5
 362              		.loc 1 584 19 view .LVU100
 363 001e 1360     		str	r3, [r2]
 585:Core/Src/main.c ****       timer_lap = 0;
 364              		.loc 1 585 7 is_stmt 1 view .LVU101
 365              		.loc 1 585 17 is_stmt 0 view .LVU102
 366 0020 054A     		ldr	r2, .L23+4
 367 0022 0021     		movs	r1, #0
 368 0024 1160     		str	r1, [r2]
 586:Core/Src/main.c ****       state = flag_button ? WAITING_STATE : RUNNING_STATE;
 369              		.loc 1 586 7 is_stmt 1 view .LVU103
 370              		.loc 1 586 43 is_stmt 0 view .LVU104
 371 0026 1BB1     		cbz	r3, .L17
 372 0028 0322     		movs	r2, #3
 373              	.L16:
 374              		.loc 1 586 13 discriminator 4 view .LVU105
 375 002a 044B     		ldr	r3, .L23+8
 376 002c 1A70     		strb	r2, [r3]
 587:Core/Src/main.c ****     }
 588:Core/Src/main.c **** }
 377              		.loc 1 588 1 discriminator 4 view .LVU106
 378 002e 08BD     		pop	{r3, pc}
 379              	.L17:
 586:Core/Src/main.c ****       state = flag_button ? WAITING_STATE : RUNNING_STATE;
 380              		.loc 1 586 43 view .LVU107
 381 0030 0122     		movs	r2, #1
 382 0032 FAE7     		b	.L16
 383              	.L24:
 384              		.align	2
 385              	.L23:
 386 0034 00000000 		.word	.LANCHOR1
 387 0038 00000000 		.word	.LANCHOR0
 388 003c 00000000 		.word	.LANCHOR3
 389              		.cfi_endproc
 390              	.LFE340:
 392              		.section	.text.Error_Handler,"ax",%progbits
 393              		.align	1
 394              		.global	Error_Handler
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	Error_Handler:
 400              	.LFB341:
 589:Core/Src/main.c **** 
 590:Core/Src/main.c **** /* USER CODE END 4 */
 591:Core/Src/main.c **** 
 592:Core/Src/main.c **** /**
 593:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 594:Core/Src/main.c ****   * @retval None
 595:Core/Src/main.c ****   */
 596:Core/Src/main.c **** void Error_Handler(void)
 597:Core/Src/main.c **** {
 401              		.loc 1 597 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ Volatile: function does not return.
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 19


 406              		@ link register save eliminated.
 598:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 599:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 600:Core/Src/main.c ****   __disable_irq();
 407              		.loc 1 600 3 view .LVU109
 408              	.LBB8:
 409              	.LBI8:
 410              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 20


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 21


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 22


 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 411              		.loc 2 207 27 view .LVU110
 412              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 413              		.loc 2 209 3 view .LVU111
 414              		.syntax unified
 415              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 416 0000 72B6     		cpsid i
 417              	@ 0 "" 2
 418              		.thumb
 419              		.syntax unified
 420              	.L26:
 421              	.LBE9:
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 23


 422              	.LBE8:
 601:Core/Src/main.c ****   while (1)
 423              		.loc 1 601 3 discriminator 1 view .LVU112
 602:Core/Src/main.c ****   {
 603:Core/Src/main.c ****   }
 424              		.loc 1 603 3 discriminator 1 view .LVU113
 601:Core/Src/main.c ****   while (1)
 425              		.loc 1 601 9 discriminator 1 view .LVU114
 426 0002 FEE7     		b	.L26
 427              		.cfi_endproc
 428              	.LFE341:
 430              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 431              		.align	1
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	MX_LPUART1_UART_Init:
 437              	.LFB336:
 430:Core/Src/main.c **** 
 438              		.loc 1 430 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442 0000 08B5     		push	{r3, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
 439:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 446              		.loc 1 439 3 view .LVU116
 439:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 115200;
 447              		.loc 1 439 21 is_stmt 0 view .LVU117
 448 0002 1548     		ldr	r0, .L37
 449 0004 154B     		ldr	r3, .L37+4
 450 0006 0360     		str	r3, [r0]
 440:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 451              		.loc 1 440 3 is_stmt 1 view .LVU118
 440:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 452              		.loc 1 440 26 is_stmt 0 view .LVU119
 453 0008 4FF4E133 		mov	r3, #115200
 454 000c 4360     		str	r3, [r0, #4]
 441:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 455              		.loc 1 441 3 is_stmt 1 view .LVU120
 441:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 456              		.loc 1 441 28 is_stmt 0 view .LVU121
 457 000e 0023     		movs	r3, #0
 458 0010 8360     		str	r3, [r0, #8]
 442:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 459              		.loc 1 442 3 is_stmt 1 view .LVU122
 442:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 460              		.loc 1 442 26 is_stmt 0 view .LVU123
 461 0012 C360     		str	r3, [r0, #12]
 443:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 462              		.loc 1 443 3 is_stmt 1 view .LVU124
 443:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 463              		.loc 1 443 24 is_stmt 0 view .LVU125
 464 0014 0361     		str	r3, [r0, #16]
 444:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 24


 465              		.loc 1 444 3 is_stmt 1 view .LVU126
 444:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 466              		.loc 1 444 22 is_stmt 0 view .LVU127
 467 0016 0C22     		movs	r2, #12
 468 0018 4261     		str	r2, [r0, #20]
 445:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 469              		.loc 1 445 3 is_stmt 1 view .LVU128
 445:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 470              		.loc 1 445 27 is_stmt 0 view .LVU129
 471 001a 8361     		str	r3, [r0, #24]
 446:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 472              		.loc 1 446 3 is_stmt 1 view .LVU130
 446:Core/Src/main.c ****   hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 473              		.loc 1 446 32 is_stmt 0 view .LVU131
 474 001c 0362     		str	r3, [r0, #32]
 447:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 475              		.loc 1 447 3 is_stmt 1 view .LVU132
 447:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 476              		.loc 1 447 32 is_stmt 0 view .LVU133
 477 001e 4362     		str	r3, [r0, #36]
 448:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 478              		.loc 1 448 3 is_stmt 1 view .LVU134
 448:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 479              		.loc 1 448 40 is_stmt 0 view .LVU135
 480 0020 8362     		str	r3, [r0, #40]
 449:Core/Src/main.c ****   {
 481              		.loc 1 449 3 is_stmt 1 view .LVU136
 449:Core/Src/main.c ****   {
 482              		.loc 1 449 7 is_stmt 0 view .LVU137
 483 0022 FFF7FEFF 		bl	HAL_UART_Init
 484              	.LVL11:
 449:Core/Src/main.c ****   {
 485              		.loc 1 449 6 view .LVU138
 486 0026 70B9     		cbnz	r0, .L33
 453:Core/Src/main.c ****   {
 487              		.loc 1 453 3 is_stmt 1 view .LVU139
 453:Core/Src/main.c ****   {
 488              		.loc 1 453 7 is_stmt 0 view .LVU140
 489 0028 0021     		movs	r1, #0
 490 002a 0B48     		ldr	r0, .L37
 491 002c FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 492              	.LVL12:
 453:Core/Src/main.c ****   {
 493              		.loc 1 453 6 view .LVU141
 494 0030 58B9     		cbnz	r0, .L34
 457:Core/Src/main.c ****   {
 495              		.loc 1 457 3 is_stmt 1 view .LVU142
 457:Core/Src/main.c ****   {
 496              		.loc 1 457 7 is_stmt 0 view .LVU143
 497 0032 0021     		movs	r1, #0
 498 0034 0848     		ldr	r0, .L37
 499 0036 FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 500              	.LVL13:
 457:Core/Src/main.c ****   {
 501              		.loc 1 457 6 view .LVU144
 502 003a 40B9     		cbnz	r0, .L35
 461:Core/Src/main.c ****   {
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 25


 503              		.loc 1 461 3 is_stmt 1 view .LVU145
 461:Core/Src/main.c ****   {
 504              		.loc 1 461 7 is_stmt 0 view .LVU146
 505 003c 0648     		ldr	r0, .L37
 506 003e FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 507              	.LVL14:
 461:Core/Src/main.c ****   {
 508              		.loc 1 461 6 view .LVU147
 509 0042 30B9     		cbnz	r0, .L36
 469:Core/Src/main.c **** 
 510              		.loc 1 469 1 view .LVU148
 511 0044 08BD     		pop	{r3, pc}
 512              	.L33:
 451:Core/Src/main.c ****   }
 513              		.loc 1 451 5 is_stmt 1 view .LVU149
 514 0046 FFF7FEFF 		bl	Error_Handler
 515              	.LVL15:
 516              	.L34:
 455:Core/Src/main.c ****   }
 517              		.loc 1 455 5 view .LVU150
 518 004a FFF7FEFF 		bl	Error_Handler
 519              	.LVL16:
 520              	.L35:
 459:Core/Src/main.c ****   }
 521              		.loc 1 459 5 view .LVU151
 522 004e FFF7FEFF 		bl	Error_Handler
 523              	.LVL17:
 524              	.L36:
 463:Core/Src/main.c ****   }
 525              		.loc 1 463 5 view .LVU152
 526 0052 FFF7FEFF 		bl	Error_Handler
 527              	.LVL18:
 528              	.L38:
 529 0056 00BF     		.align	2
 530              	.L37:
 531 0058 00000000 		.word	.LANCHOR6
 532 005c 00800040 		.word	1073774592
 533              		.cfi_endproc
 534              	.LFE336:
 536              		.section	.text.MX_ADC1_Init,"ax",%progbits
 537              		.align	1
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 542              	MX_ADC1_Init:
 543              	.LFB334:
 303:Core/Src/main.c **** 
 544              		.loc 1 303 1 view -0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 48
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548 0000 10B5     		push	{r4, lr}
 549              		.cfi_def_cfa_offset 8
 550              		.cfi_offset 4, -8
 551              		.cfi_offset 14, -4
 552 0002 8CB0     		sub	sp, sp, #48
 553              		.cfi_def_cfa_offset 56
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 26


 309:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 554              		.loc 1 309 3 view .LVU154
 309:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 555              		.loc 1 309 24 is_stmt 0 view .LVU155
 556 0004 0024     		movs	r4, #0
 557 0006 0994     		str	r4, [sp, #36]
 558 0008 0A94     		str	r4, [sp, #40]
 559 000a 0B94     		str	r4, [sp, #44]
 310:Core/Src/main.c **** 
 560              		.loc 1 310 3 is_stmt 1 view .LVU156
 310:Core/Src/main.c **** 
 561              		.loc 1 310 26 is_stmt 0 view .LVU157
 562 000c 2022     		movs	r2, #32
 563 000e 2146     		mov	r1, r4
 564 0010 01A8     		add	r0, sp, #4
 565 0012 FFF7FEFF 		bl	memset
 566              	.LVL19:
 318:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 567              		.loc 1 318 3 is_stmt 1 view .LVU158
 318:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 568              		.loc 1 318 18 is_stmt 0 view .LVU159
 569 0016 1E48     		ldr	r0, .L47
 570 0018 4FF0A043 		mov	r3, #1342177280
 571 001c 0360     		str	r3, [r0]
 319:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 572              		.loc 1 319 3 is_stmt 1 view .LVU160
 319:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 573              		.loc 1 319 29 is_stmt 0 view .LVU161
 574 001e 4FF44033 		mov	r3, #196608
 575 0022 4360     		str	r3, [r0, #4]
 320:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 576              		.loc 1 320 3 is_stmt 1 view .LVU162
 320:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 577              		.loc 1 320 25 is_stmt 0 view .LVU163
 578 0024 8460     		str	r4, [r0, #8]
 321:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 579              		.loc 1 321 3 is_stmt 1 view .LVU164
 321:Core/Src/main.c ****   hadc1.Init.GainCompensation = 0;
 580              		.loc 1 321 24 is_stmt 0 view .LVU165
 581 0026 C460     		str	r4, [r0, #12]
 322:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 582              		.loc 1 322 3 is_stmt 1 view .LVU166
 322:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 583              		.loc 1 322 31 is_stmt 0 view .LVU167
 584 0028 0461     		str	r4, [r0, #16]
 323:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 585              		.loc 1 323 3 is_stmt 1 view .LVU168
 323:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 586              		.loc 1 323 27 is_stmt 0 view .LVU169
 587 002a 4461     		str	r4, [r0, #20]
 324:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 588              		.loc 1 324 3 is_stmt 1 view .LVU170
 324:Core/Src/main.c ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 589              		.loc 1 324 27 is_stmt 0 view .LVU171
 590 002c 0423     		movs	r3, #4
 591 002e 8361     		str	r3, [r0, #24]
 325:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 27


 592              		.loc 1 325 3 is_stmt 1 view .LVU172
 325:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 593              		.loc 1 325 31 is_stmt 0 view .LVU173
 594 0030 0477     		strb	r4, [r0, #28]
 326:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 595              		.loc 1 326 3 is_stmt 1 view .LVU174
 326:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 596              		.loc 1 326 33 is_stmt 0 view .LVU175
 597 0032 4477     		strb	r4, [r0, #29]
 327:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 598              		.loc 1 327 3 is_stmt 1 view .LVU176
 327:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 599              		.loc 1 327 30 is_stmt 0 view .LVU177
 600 0034 0123     		movs	r3, #1
 601 0036 0362     		str	r3, [r0, #32]
 328:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 602              		.loc 1 328 3 is_stmt 1 view .LVU178
 328:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 603              		.loc 1 328 36 is_stmt 0 view .LVU179
 604 0038 80F82440 		strb	r4, [r0, #36]
 329:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 605              		.loc 1 329 3 is_stmt 1 view .LVU180
 329:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 606              		.loc 1 329 31 is_stmt 0 view .LVU181
 607 003c C462     		str	r4, [r0, #44]
 330:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 608              		.loc 1 330 3 is_stmt 1 view .LVU182
 330:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 609              		.loc 1 330 35 is_stmt 0 view .LVU183
 610 003e 0463     		str	r4, [r0, #48]
 331:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 611              		.loc 1 331 3 is_stmt 1 view .LVU184
 331:Core/Src/main.c ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 612              		.loc 1 331 36 is_stmt 0 view .LVU185
 613 0040 80F83840 		strb	r4, [r0, #56]
 332:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 614              		.loc 1 332 3 is_stmt 1 view .LVU186
 332:Core/Src/main.c ****   hadc1.Init.OversamplingMode = DISABLE;
 615              		.loc 1 332 22 is_stmt 0 view .LVU187
 616 0044 C463     		str	r4, [r0, #60]
 333:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 617              		.loc 1 333 3 is_stmt 1 view .LVU188
 333:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 618              		.loc 1 333 31 is_stmt 0 view .LVU189
 619 0046 80F84040 		strb	r4, [r0, #64]
 334:Core/Src/main.c ****   {
 620              		.loc 1 334 3 is_stmt 1 view .LVU190
 334:Core/Src/main.c ****   {
 621              		.loc 1 334 7 is_stmt 0 view .LVU191
 622 004a FFF7FEFF 		bl	HAL_ADC_Init
 623              	.LVL20:
 334:Core/Src/main.c ****   {
 624              		.loc 1 334 6 view .LVU192
 625 004e C8B9     		cbnz	r0, .L44
 341:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 626              		.loc 1 341 3 is_stmt 1 view .LVU193
 341:Core/Src/main.c ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 28


 627              		.loc 1 341 18 is_stmt 0 view .LVU194
 628 0050 0023     		movs	r3, #0
 629 0052 0993     		str	r3, [sp, #36]
 342:Core/Src/main.c ****   {
 630              		.loc 1 342 3 is_stmt 1 view .LVU195
 342:Core/Src/main.c ****   {
 631              		.loc 1 342 7 is_stmt 0 view .LVU196
 632 0054 09A9     		add	r1, sp, #36
 633 0056 0E48     		ldr	r0, .L47
 634 0058 FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 635              	.LVL21:
 342:Core/Src/main.c ****   {
 636              		.loc 1 342 6 view .LVU197
 637 005c A0B9     		cbnz	r0, .L45
 349:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 638              		.loc 1 349 3 is_stmt 1 view .LVU198
 349:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 639              		.loc 1 349 19 is_stmt 0 view .LVU199
 640 005e 0D4B     		ldr	r3, .L47+4
 641 0060 0193     		str	r3, [sp, #4]
 350:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 642              		.loc 1 350 3 is_stmt 1 view .LVU200
 350:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 643              		.loc 1 350 16 is_stmt 0 view .LVU201
 644 0062 0623     		movs	r3, #6
 645 0064 0293     		str	r3, [sp, #8]
 351:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 646              		.loc 1 351 3 is_stmt 1 view .LVU202
 351:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 647              		.loc 1 351 24 is_stmt 0 view .LVU203
 648 0066 0023     		movs	r3, #0
 649 0068 0393     		str	r3, [sp, #12]
 352:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 650              		.loc 1 352 3 is_stmt 1 view .LVU204
 352:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 651              		.loc 1 352 22 is_stmt 0 view .LVU205
 652 006a 7F22     		movs	r2, #127
 653 006c 0492     		str	r2, [sp, #16]
 353:Core/Src/main.c ****   sConfig.Offset = 0;
 654              		.loc 1 353 3 is_stmt 1 view .LVU206
 353:Core/Src/main.c ****   sConfig.Offset = 0;
 655              		.loc 1 353 24 is_stmt 0 view .LVU207
 656 006e 0422     		movs	r2, #4
 657 0070 0592     		str	r2, [sp, #20]
 354:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 658              		.loc 1 354 3 is_stmt 1 view .LVU208
 354:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 659              		.loc 1 354 18 is_stmt 0 view .LVU209
 660 0072 0693     		str	r3, [sp, #24]
 355:Core/Src/main.c ****   {
 661              		.loc 1 355 3 is_stmt 1 view .LVU210
 355:Core/Src/main.c ****   {
 662              		.loc 1 355 7 is_stmt 0 view .LVU211
 663 0074 0DEB0201 		add	r1, sp, r2
 664 0078 0548     		ldr	r0, .L47
 665 007a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 666              	.LVL22:
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 29


 355:Core/Src/main.c ****   {
 667              		.loc 1 355 6 view .LVU212
 668 007e 28B9     		cbnz	r0, .L46
 363:Core/Src/main.c **** 
 669              		.loc 1 363 1 view .LVU213
 670 0080 0CB0     		add	sp, sp, #48
 671              		.cfi_remember_state
 672              		.cfi_def_cfa_offset 8
 673              		@ sp needed
 674 0082 10BD     		pop	{r4, pc}
 675              	.L44:
 676              		.cfi_restore_state
 336:Core/Src/main.c ****   }
 677              		.loc 1 336 5 is_stmt 1 view .LVU214
 678 0084 FFF7FEFF 		bl	Error_Handler
 679              	.LVL23:
 680              	.L45:
 344:Core/Src/main.c ****   }
 681              		.loc 1 344 5 view .LVU215
 682 0088 FFF7FEFF 		bl	Error_Handler
 683              	.LVL24:
 684              	.L46:
 357:Core/Src/main.c ****   }
 685              		.loc 1 357 5 view .LVU216
 686 008c FFF7FEFF 		bl	Error_Handler
 687              	.LVL25:
 688              	.L48:
 689              		.align	2
 690              	.L47:
 691 0090 00000000 		.word	.LANCHOR7
 692 0094 02003004 		.word	70254594
 693              		.cfi_endproc
 694              	.LFE334:
 696              		.section	.text.MX_TIM6_Init,"ax",%progbits
 697              		.align	1
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 702              	MX_TIM6_Init:
 703              	.LFB337:
 477:Core/Src/main.c **** 
 704              		.loc 1 477 1 view -0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 16
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708 0000 00B5     		push	{lr}
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 14, -4
 711 0002 85B0     		sub	sp, sp, #20
 712              		.cfi_def_cfa_offset 24
 483:Core/Src/main.c **** 
 713              		.loc 1 483 3 view .LVU218
 483:Core/Src/main.c **** 
 714              		.loc 1 483 27 is_stmt 0 view .LVU219
 715 0004 0023     		movs	r3, #0
 716 0006 0193     		str	r3, [sp, #4]
 717 0008 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 30


 718 000a 0393     		str	r3, [sp, #12]
 488:Core/Src/main.c ****   htim6.Init.Prescaler = 1000-1;
 719              		.loc 1 488 3 is_stmt 1 view .LVU220
 488:Core/Src/main.c ****   htim6.Init.Prescaler = 1000-1;
 720              		.loc 1 488 18 is_stmt 0 view .LVU221
 721 000c 0E48     		ldr	r0, .L55
 722 000e 0F4A     		ldr	r2, .L55+4
 723 0010 0260     		str	r2, [r0]
 489:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 724              		.loc 1 489 3 is_stmt 1 view .LVU222
 489:Core/Src/main.c ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 725              		.loc 1 489 24 is_stmt 0 view .LVU223
 726 0012 40F2E732 		movw	r2, #999
 727 0016 4260     		str	r2, [r0, #4]
 490:Core/Src/main.c ****   htim6.Init.Period = 8499;
 728              		.loc 1 490 3 is_stmt 1 view .LVU224
 490:Core/Src/main.c ****   htim6.Init.Period = 8499;
 729              		.loc 1 490 26 is_stmt 0 view .LVU225
 730 0018 8360     		str	r3, [r0, #8]
 491:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 731              		.loc 1 491 3 is_stmt 1 view .LVU226
 491:Core/Src/main.c ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 732              		.loc 1 491 21 is_stmt 0 view .LVU227
 733 001a 42F23312 		movw	r2, #8499
 734 001e C260     		str	r2, [r0, #12]
 492:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 735              		.loc 1 492 3 is_stmt 1 view .LVU228
 492:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 736              		.loc 1 492 32 is_stmt 0 view .LVU229
 737 0020 8361     		str	r3, [r0, #24]
 493:Core/Src/main.c ****   {
 738              		.loc 1 493 3 is_stmt 1 view .LVU230
 493:Core/Src/main.c ****   {
 739              		.loc 1 493 7 is_stmt 0 view .LVU231
 740 0022 FFF7FEFF 		bl	HAL_TIM_Base_Init
 741              	.LVL26:
 493:Core/Src/main.c ****   {
 742              		.loc 1 493 6 view .LVU232
 743 0026 50B9     		cbnz	r0, .L53
 497:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 744              		.loc 1 497 3 is_stmt 1 view .LVU233
 497:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 745              		.loc 1 497 37 is_stmt 0 view .LVU234
 746 0028 0023     		movs	r3, #0
 747 002a 0193     		str	r3, [sp, #4]
 498:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 748              		.loc 1 498 3 is_stmt 1 view .LVU235
 498:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 749              		.loc 1 498 33 is_stmt 0 view .LVU236
 750 002c 0393     		str	r3, [sp, #12]
 499:Core/Src/main.c ****   {
 751              		.loc 1 499 3 is_stmt 1 view .LVU237
 499:Core/Src/main.c ****   {
 752              		.loc 1 499 7 is_stmt 0 view .LVU238
 753 002e 01A9     		add	r1, sp, #4
 754 0030 0548     		ldr	r0, .L55
 755 0032 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 31


 756              	.LVL27:
 499:Core/Src/main.c ****   {
 757              		.loc 1 499 6 view .LVU239
 758 0036 20B9     		cbnz	r0, .L54
 507:Core/Src/main.c **** 
 759              		.loc 1 507 1 view .LVU240
 760 0038 05B0     		add	sp, sp, #20
 761              		.cfi_remember_state
 762              		.cfi_def_cfa_offset 4
 763              		@ sp needed
 764 003a 5DF804FB 		ldr	pc, [sp], #4
 765              	.L53:
 766              		.cfi_restore_state
 495:Core/Src/main.c ****   }
 767              		.loc 1 495 5 is_stmt 1 view .LVU241
 768 003e FFF7FEFF 		bl	Error_Handler
 769              	.LVL28:
 770              	.L54:
 501:Core/Src/main.c ****   }
 771              		.loc 1 501 5 view .LVU242
 772 0042 FFF7FEFF 		bl	Error_Handler
 773              	.LVL29:
 774              	.L56:
 775 0046 00BF     		.align	2
 776              	.L55:
 777 0048 00000000 		.word	.LANCHOR8
 778 004c 00100040 		.word	1073745920
 779              		.cfi_endproc
 780              	.LFE337:
 782              		.section	.text.MX_ADC2_Init,"ax",%progbits
 783              		.align	1
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	MX_ADC2_Init:
 789              	.LFB335:
 371:Core/Src/main.c **** 
 790              		.loc 1 371 1 view -0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 32
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794 0000 00B5     		push	{lr}
 795              		.cfi_def_cfa_offset 4
 796              		.cfi_offset 14, -4
 797 0002 89B0     		sub	sp, sp, #36
 798              		.cfi_def_cfa_offset 40
 377:Core/Src/main.c **** 
 799              		.loc 1 377 3 view .LVU244
 377:Core/Src/main.c **** 
 800              		.loc 1 377 26 is_stmt 0 view .LVU245
 801 0004 2022     		movs	r2, #32
 802 0006 0021     		movs	r1, #0
 803 0008 6846     		mov	r0, sp
 804 000a FFF7FEFF 		bl	memset
 805              	.LVL30:
 385:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 806              		.loc 1 385 3 is_stmt 1 view .LVU246
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 32


 385:Core/Src/main.c ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 807              		.loc 1 385 18 is_stmt 0 view .LVU247
 808 000e 1A48     		ldr	r0, .L63
 809 0010 1A4B     		ldr	r3, .L63+4
 810 0012 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 811              		.loc 1 386 3 is_stmt 1 view .LVU248
 386:Core/Src/main.c ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 812              		.loc 1 386 29 is_stmt 0 view .LVU249
 813 0014 4FF44033 		mov	r3, #196608
 814 0018 4360     		str	r3, [r0, #4]
 387:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 815              		.loc 1 387 3 is_stmt 1 view .LVU250
 387:Core/Src/main.c ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 816              		.loc 1 387 25 is_stmt 0 view .LVU251
 817 001a 0023     		movs	r3, #0
 818 001c 8360     		str	r3, [r0, #8]
 388:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 819              		.loc 1 388 3 is_stmt 1 view .LVU252
 388:Core/Src/main.c ****   hadc2.Init.GainCompensation = 0;
 820              		.loc 1 388 24 is_stmt 0 view .LVU253
 821 001e C360     		str	r3, [r0, #12]
 389:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 822              		.loc 1 389 3 is_stmt 1 view .LVU254
 389:Core/Src/main.c ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 823              		.loc 1 389 31 is_stmt 0 view .LVU255
 824 0020 0361     		str	r3, [r0, #16]
 390:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 825              		.loc 1 390 3 is_stmt 1 view .LVU256
 390:Core/Src/main.c ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 826              		.loc 1 390 27 is_stmt 0 view .LVU257
 827 0022 4361     		str	r3, [r0, #20]
 391:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 828              		.loc 1 391 3 is_stmt 1 view .LVU258
 391:Core/Src/main.c ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 829              		.loc 1 391 27 is_stmt 0 view .LVU259
 830 0024 0422     		movs	r2, #4
 831 0026 8261     		str	r2, [r0, #24]
 392:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 832              		.loc 1 392 3 is_stmt 1 view .LVU260
 392:Core/Src/main.c ****   hadc2.Init.ContinuousConvMode = DISABLE;
 833              		.loc 1 392 31 is_stmt 0 view .LVU261
 834 0028 0377     		strb	r3, [r0, #28]
 393:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 835              		.loc 1 393 3 is_stmt 1 view .LVU262
 393:Core/Src/main.c ****   hadc2.Init.NbrOfConversion = 1;
 836              		.loc 1 393 33 is_stmt 0 view .LVU263
 837 002a 4377     		strb	r3, [r0, #29]
 394:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 838              		.loc 1 394 3 is_stmt 1 view .LVU264
 394:Core/Src/main.c ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 839              		.loc 1 394 30 is_stmt 0 view .LVU265
 840 002c 0122     		movs	r2, #1
 841 002e 0262     		str	r2, [r0, #32]
 395:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 842              		.loc 1 395 3 is_stmt 1 view .LVU266
 395:Core/Src/main.c ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 33


 843              		.loc 1 395 36 is_stmt 0 view .LVU267
 844 0030 80F82430 		strb	r3, [r0, #36]
 396:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 845              		.loc 1 396 3 is_stmt 1 view .LVU268
 396:Core/Src/main.c ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 846              		.loc 1 396 31 is_stmt 0 view .LVU269
 847 0034 C362     		str	r3, [r0, #44]
 397:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 848              		.loc 1 397 3 is_stmt 1 view .LVU270
 397:Core/Src/main.c ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 849              		.loc 1 397 35 is_stmt 0 view .LVU271
 850 0036 0363     		str	r3, [r0, #48]
 398:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 851              		.loc 1 398 3 is_stmt 1 view .LVU272
 398:Core/Src/main.c ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 852              		.loc 1 398 36 is_stmt 0 view .LVU273
 853 0038 80F83830 		strb	r3, [r0, #56]
 399:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 854              		.loc 1 399 3 is_stmt 1 view .LVU274
 399:Core/Src/main.c ****   hadc2.Init.OversamplingMode = DISABLE;
 855              		.loc 1 399 22 is_stmt 0 view .LVU275
 856 003c C363     		str	r3, [r0, #60]
 400:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 857              		.loc 1 400 3 is_stmt 1 view .LVU276
 400:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 858              		.loc 1 400 31 is_stmt 0 view .LVU277
 859 003e 80F84030 		strb	r3, [r0, #64]
 401:Core/Src/main.c ****   {
 860              		.loc 1 401 3 is_stmt 1 view .LVU278
 401:Core/Src/main.c ****   {
 861              		.loc 1 401 7 is_stmt 0 view .LVU279
 862 0042 FFF7FEFF 		bl	HAL_ADC_Init
 863              	.LVL31:
 401:Core/Src/main.c ****   {
 864              		.loc 1 401 6 view .LVU280
 865 0046 90B9     		cbnz	r0, .L61
 408:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 866              		.loc 1 408 3 is_stmt 1 view .LVU281
 408:Core/Src/main.c ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 867              		.loc 1 408 19 is_stmt 0 view .LVU282
 868 0048 0D4B     		ldr	r3, .L63+8
 869 004a 0093     		str	r3, [sp]
 409:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 870              		.loc 1 409 3 is_stmt 1 view .LVU283
 409:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 871              		.loc 1 409 16 is_stmt 0 view .LVU284
 872 004c 0623     		movs	r3, #6
 873 004e 0193     		str	r3, [sp, #4]
 410:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 874              		.loc 1 410 3 is_stmt 1 view .LVU285
 410:Core/Src/main.c ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 875              		.loc 1 410 24 is_stmt 0 view .LVU286
 876 0050 0023     		movs	r3, #0
 877 0052 0293     		str	r3, [sp, #8]
 411:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 878              		.loc 1 411 3 is_stmt 1 view .LVU287
 411:Core/Src/main.c ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 34


 879              		.loc 1 411 22 is_stmt 0 view .LVU288
 880 0054 7F22     		movs	r2, #127
 881 0056 0392     		str	r2, [sp, #12]
 412:Core/Src/main.c ****   sConfig.Offset = 0;
 882              		.loc 1 412 3 is_stmt 1 view .LVU289
 412:Core/Src/main.c ****   sConfig.Offset = 0;
 883              		.loc 1 412 24 is_stmt 0 view .LVU290
 884 0058 0422     		movs	r2, #4
 885 005a 0492     		str	r2, [sp, #16]
 413:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 886              		.loc 1 413 3 is_stmt 1 view .LVU291
 413:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 887              		.loc 1 413 18 is_stmt 0 view .LVU292
 888 005c 0593     		str	r3, [sp, #20]
 414:Core/Src/main.c ****   {
 889              		.loc 1 414 3 is_stmt 1 view .LVU293
 414:Core/Src/main.c ****   {
 890              		.loc 1 414 7 is_stmt 0 view .LVU294
 891 005e 6946     		mov	r1, sp
 892 0060 0548     		ldr	r0, .L63
 893 0062 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 894              	.LVL32:
 414:Core/Src/main.c ****   {
 895              		.loc 1 414 6 view .LVU295
 896 0066 20B9     		cbnz	r0, .L62
 422:Core/Src/main.c **** 
 897              		.loc 1 422 1 view .LVU296
 898 0068 09B0     		add	sp, sp, #36
 899              		.cfi_remember_state
 900              		.cfi_def_cfa_offset 4
 901              		@ sp needed
 902 006a 5DF804FB 		ldr	pc, [sp], #4
 903              	.L61:
 904              		.cfi_restore_state
 403:Core/Src/main.c ****   }
 905              		.loc 1 403 5 is_stmt 1 view .LVU297
 906 006e FFF7FEFF 		bl	Error_Handler
 907              	.LVL33:
 908              	.L62:
 416:Core/Src/main.c ****   }
 909              		.loc 1 416 5 view .LVU298
 910 0072 FFF7FEFF 		bl	Error_Handler
 911              	.LVL34:
 912              	.L64:
 913 0076 00BF     		.align	2
 914              	.L63:
 915 0078 00000000 		.word	.LANCHOR9
 916 007c 00010050 		.word	1342177536
 917 0080 04006008 		.word	140509188
 918              		.cfi_endproc
 919              	.LFE335:
 921              		.section	.text.SystemClock_Config,"ax",%progbits
 922              		.align	1
 923              		.global	SystemClock_Config
 924              		.syntax unified
 925              		.thumb
 926              		.thumb_func
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 35


 928              	SystemClock_Config:
 929              	.LFB333:
 256:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 930              		.loc 1 256 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 80
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934 0000 00B5     		push	{lr}
 935              		.cfi_def_cfa_offset 4
 936              		.cfi_offset 14, -4
 937 0002 95B0     		sub	sp, sp, #84
 938              		.cfi_def_cfa_offset 88
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 939              		.loc 1 257 3 view .LVU300
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 940              		.loc 1 257 22 is_stmt 0 view .LVU301
 941 0004 3822     		movs	r2, #56
 942 0006 0021     		movs	r1, #0
 943 0008 06A8     		add	r0, sp, #24
 944 000a FFF7FEFF 		bl	memset
 945              	.LVL35:
 258:Core/Src/main.c **** 
 946              		.loc 1 258 3 is_stmt 1 view .LVU302
 258:Core/Src/main.c **** 
 947              		.loc 1 258 22 is_stmt 0 view .LVU303
 948 000e 0020     		movs	r0, #0
 949 0010 0190     		str	r0, [sp, #4]
 950 0012 0290     		str	r0, [sp, #8]
 951 0014 0390     		str	r0, [sp, #12]
 952 0016 0490     		str	r0, [sp, #16]
 953 0018 0590     		str	r0, [sp, #20]
 262:Core/Src/main.c **** 
 954              		.loc 1 262 3 is_stmt 1 view .LVU304
 955 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 956              	.LVL36:
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 957              		.loc 1 267 3 view .LVU305
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 958              		.loc 1 267 36 is_stmt 0 view .LVU306
 959 001e 0223     		movs	r3, #2
 960 0020 0693     		str	r3, [sp, #24]
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 961              		.loc 1 268 3 is_stmt 1 view .LVU307
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 962              		.loc 1 268 30 is_stmt 0 view .LVU308
 963 0022 4FF48072 		mov	r2, #256
 964 0026 0992     		str	r2, [sp, #36]
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 965              		.loc 1 269 3 is_stmt 1 view .LVU309
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 966              		.loc 1 269 41 is_stmt 0 view .LVU310
 967 0028 4022     		movs	r2, #64
 968 002a 0A92     		str	r2, [sp, #40]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 969              		.loc 1 270 3 is_stmt 1 view .LVU311
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 970              		.loc 1 270 34 is_stmt 0 view .LVU312
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 36


 971 002c 0D93     		str	r3, [sp, #52]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 972              		.loc 1 271 3 is_stmt 1 view .LVU313
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV4;
 973              		.loc 1 271 35 is_stmt 0 view .LVU314
 974 002e 0E93     		str	r3, [sp, #56]
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 975              		.loc 1 272 3 is_stmt 1 view .LVU315
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 976              		.loc 1 272 30 is_stmt 0 view .LVU316
 977 0030 0422     		movs	r2, #4
 978 0032 0F92     		str	r2, [sp, #60]
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 979              		.loc 1 273 3 is_stmt 1 view .LVU317
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 980              		.loc 1 273 30 is_stmt 0 view .LVU318
 981 0034 5522     		movs	r2, #85
 982 0036 1092     		str	r2, [sp, #64]
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 983              		.loc 1 274 3 is_stmt 1 view .LVU319
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 984              		.loc 1 274 30 is_stmt 0 view .LVU320
 985 0038 1193     		str	r3, [sp, #68]
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 986              		.loc 1 275 3 is_stmt 1 view .LVU321
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 987              		.loc 1 275 30 is_stmt 0 view .LVU322
 988 003a 1293     		str	r3, [sp, #72]
 276:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 989              		.loc 1 276 3 is_stmt 1 view .LVU323
 276:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 990              		.loc 1 276 30 is_stmt 0 view .LVU324
 991 003c 1393     		str	r3, [sp, #76]
 277:Core/Src/main.c ****   {
 992              		.loc 1 277 3 is_stmt 1 view .LVU325
 277:Core/Src/main.c ****   {
 993              		.loc 1 277 7 is_stmt 0 view .LVU326
 994 003e 06A8     		add	r0, sp, #24
 995 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 996              	.LVL37:
 277:Core/Src/main.c ****   {
 997              		.loc 1 277 6 view .LVU327
 998 0044 90B9     		cbnz	r0, .L69
 284:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 999              		.loc 1 284 3 is_stmt 1 view .LVU328
 284:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1000              		.loc 1 284 31 is_stmt 0 view .LVU329
 1001 0046 0F23     		movs	r3, #15
 1002 0048 0193     		str	r3, [sp, #4]
 286:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1003              		.loc 1 286 3 is_stmt 1 view .LVU330
 286:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1004              		.loc 1 286 34 is_stmt 0 view .LVU331
 1005 004a 0323     		movs	r3, #3
 1006 004c 0293     		str	r3, [sp, #8]
 287:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1007              		.loc 1 287 3 is_stmt 1 view .LVU332
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 37


 287:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1008              		.loc 1 287 35 is_stmt 0 view .LVU333
 1009 004e 0023     		movs	r3, #0
 1010 0050 0393     		str	r3, [sp, #12]
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 1011              		.loc 1 288 3 is_stmt 1 view .LVU334
 288:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV16;
 1012              		.loc 1 288 36 is_stmt 0 view .LVU335
 1013 0052 0493     		str	r3, [sp, #16]
 289:Core/Src/main.c **** 
 1014              		.loc 1 289 3 is_stmt 1 view .LVU336
 289:Core/Src/main.c **** 
 1015              		.loc 1 289 36 is_stmt 0 view .LVU337
 1016 0054 4FF4E063 		mov	r3, #1792
 1017 0058 0593     		str	r3, [sp, #20]
 291:Core/Src/main.c ****   {
 1018              		.loc 1 291 3 is_stmt 1 view .LVU338
 291:Core/Src/main.c ****   {
 1019              		.loc 1 291 7 is_stmt 0 view .LVU339
 1020 005a 0421     		movs	r1, #4
 1021 005c 0DEB0100 		add	r0, sp, r1
 1022 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1023              	.LVL38:
 291:Core/Src/main.c ****   {
 1024              		.loc 1 291 6 view .LVU340
 1025 0064 20B9     		cbnz	r0, .L70
 295:Core/Src/main.c **** 
 1026              		.loc 1 295 1 view .LVU341
 1027 0066 15B0     		add	sp, sp, #84
 1028              		.cfi_remember_state
 1029              		.cfi_def_cfa_offset 4
 1030              		@ sp needed
 1031 0068 5DF804FB 		ldr	pc, [sp], #4
 1032              	.L69:
 1033              		.cfi_restore_state
 279:Core/Src/main.c ****   }
 1034              		.loc 1 279 5 is_stmt 1 view .LVU342
 1035 006c FFF7FEFF 		bl	Error_Handler
 1036              	.LVL39:
 1037              	.L70:
 293:Core/Src/main.c ****   }
 1038              		.loc 1 293 5 view .LVU343
 1039 0070 FFF7FEFF 		bl	Error_Handler
 1040              	.LVL40:
 1041              		.cfi_endproc
 1042              	.LFE333:
 1044              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1045              		.align	2
 1046              	.LC0:
 1047 0000 494E4954 		.ascii	"INIT_STATE\000"
 1047      5F535441 
 1047      544500
 1048 000b 00       		.align	2
 1049              	.LC1:
 1050 000c 52454144 		.ascii	"READING STATE\000"
 1050      494E4720 
 1050      53544154 
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 38


 1050      4500
 1051 001a 0000     		.align	2
 1052              	.LC2:
 1053 001c 0A537461 		.ascii	"\012State: %s \015\012\000"
 1053      74653A20 
 1053      2573200D 
 1053      0A00
 1054              		.global	__aeabi_i2d
 1055              		.global	__aeabi_dmul
 1056              		.global	__aeabi_ddiv
 1057              		.global	__aeabi_dsub
 1058              		.global	__aeabi_d2f
 1059 002a 0000     		.align	2
 1060              	.LC3:
 1061 002c 28256C75 		.ascii	"(%lu) Hall sensor:  %4.2f [GS]\015\012\000"
 1061      29204861 
 1061      6C6C2073 
 1061      656E736F 
 1061      723A2020 
 1062              		.global	__aeabi_f2d
 1063 004d 000000   		.align	2
 1064              	.LC4:
 1065 0050 28256C75 		.ascii	"(%lu) Voltage:  %.3f [V]\015\012\000"
 1065      2920566F 
 1065      6C746167 
 1065      653A2020 
 1065      252E3366 
 1066              		.global	__aeabi_dcmplt
 1067 006b 00       		.align	2
 1068              	.LC5:
 1069 006c 44414E47 		.ascii	"DANGER STATE: undervoltage\015\012\000"
 1069      45522053 
 1069      54415445 
 1069      3A20756E 
 1069      64657276 
 1070              		.global	__aeabi_dcmpgt
 1071 0089 000000   		.align	2
 1072              	.LC6:
 1073 008c 44414E47 		.ascii	"DANGER STATE: overvoltage\015\012\000"
 1073      45522053 
 1073      54415445 
 1073      3A206F76 
 1073      6572766F 
 1074              		.align	2
 1075              	.LC7:
 1076 00a8 28256C75 		.ascii	"(%lu)Board in waiting state - please press the emer"
 1076      29426F61 
 1076      72642069 
 1076      6E207761 
 1076      6974696E 
 1077 00db 67656E63 		.ascii	"gency button\015\012\000"
 1077      79206275 
 1077      74746F6E 
 1077      0D0A00
 1078              		.section	.text.main,"ax",%progbits
 1079              		.align	1
 1080              		.global	main
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 39


 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1085              	main:
 1086              	.LFB332:
  93:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1087              		.loc 1 93 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 288
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1092              		.cfi_def_cfa_offset 20
 1093              		.cfi_offset 4, -20
 1094              		.cfi_offset 5, -16
 1095              		.cfi_offset 6, -12
 1096              		.cfi_offset 7, -8
 1097              		.cfi_offset 14, -4
 1098 0002 CBB0     		sub	sp, sp, #300
 1099              		.cfi_def_cfa_offset 320
  96:Core/Src/main.c ****   state_names[READING_STATE] = "READING STATE";
 1100              		.loc 1 96 3 view .LVU345
  96:Core/Src/main.c ****   state_names[READING_STATE] = "READING STATE";
 1101              		.loc 1 96 27 is_stmt 0 view .LVU346
 1102 0004 B04B     		ldr	r3, .L93+40
 1103 0006 B14A     		ldr	r2, .L93+44
 1104 0008 1A60     		str	r2, [r3]
  97:Core/Src/main.c ****   char state_msg [30];
 1105              		.loc 1 97 3 is_stmt 1 view .LVU347
  97:Core/Src/main.c ****   char state_msg [30];
 1106              		.loc 1 97 30 is_stmt 0 view .LVU348
 1107 000a B14A     		ldr	r2, .L93+48
 1108 000c 9A60     		str	r2, [r3, #8]
  98:Core/Src/main.c ****   uint16_t raw;
 1109              		.loc 1 98 3 is_stmt 1 view .LVU349
  99:Core/Src/main.c ****   char msg[50];
 1110              		.loc 1 99 3 view .LVU350
 100:Core/Src/main.c ****   char msg_voltage[50];
 1111              		.loc 1 100 3 view .LVU351
 101:Core/Src/main.c ****   char danger_message[50];
 1112              		.loc 1 101 3 view .LVU352
 102:Core/Src/main.c ****   float raw_to_gauss;
 1113              		.loc 1 102 3 view .LVU353
 103:Core/Src/main.c ****   state = INIT_STATE;
 1114              		.loc 1 103 3 view .LVU354
 104:Core/Src/main.c **** 
 1115              		.loc 1 104 3 view .LVU355
 104:Core/Src/main.c **** 
 1116              		.loc 1 104 9 is_stmt 0 view .LVU356
 1117 000e B14B     		ldr	r3, .L93+52
 1118 0010 0022     		movs	r2, #0
 1119 0012 1A70     		strb	r2, [r3]
 106:Core/Src/main.c ****   float raw_voltage_volt;
 1120              		.loc 1 106 3 is_stmt 1 view .LVU357
 107:Core/Src/main.c **** 
 1121              		.loc 1 107 3 view .LVU358
 110:Core/Src/main.c **** 
 1122              		.loc 1 110 3 view .LVU359
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 40


 117:Core/Src/main.c **** 
 1123              		.loc 1 117 3 view .LVU360
 1124 0014 FFF7FEFF 		bl	HAL_Init
 1125              	.LVL41:
 124:Core/Src/main.c **** 
 1126              		.loc 1 124 3 view .LVU361
 1127 0018 FFF7FEFF 		bl	SystemClock_Config
 1128              	.LVL42:
 131:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 1129              		.loc 1 131 3 view .LVU362
 1130 001c FFF7FEFF 		bl	MX_GPIO_Init
 1131              	.LVL43:
 132:Core/Src/main.c ****   MX_ADC1_Init();
 1132              		.loc 1 132 3 view .LVU363
 1133 0020 FFF7FEFF 		bl	MX_LPUART1_UART_Init
 1134              	.LVL44:
 133:Core/Src/main.c ****   MX_TIM6_Init();
 1135              		.loc 1 133 3 view .LVU364
 1136 0024 FFF7FEFF 		bl	MX_ADC1_Init
 1137              	.LVL45:
 134:Core/Src/main.c ****   MX_ADC2_Init();
 1138              		.loc 1 134 3 view .LVU365
 1139 0028 FFF7FEFF 		bl	MX_TIM6_Init
 1140              	.LVL46:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1141              		.loc 1 135 3 view .LVU366
 1142 002c FFF7FEFF 		bl	MX_ADC2_Init
 1143              	.LVL47:
 140:Core/Src/main.c **** 
 1144              		.loc 1 140 3 view .LVU367
 1145 0030 A948     		ldr	r0, .L93+56
 1146 0032 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1147              	.LVL48:
 1148 0036 84E0     		b	.L75
 1149              	.L91:
 159:Core/Src/main.c ****         HAL_ADC_PollForConversion(&hadc1, 1); 
 1150              		.loc 1 159 9 view .LVU368
 1151 0038 A84C     		ldr	r4, .L93+60
 1152 003a 2046     		mov	r0, r4
 1153 003c FFF7FEFF 		bl	HAL_ADC_Start
 1154              	.LVL49:
 160:Core/Src/main.c ****         raw = HAL_ADC_GetValue(&hadc1);
 1155              		.loc 1 160 9 view .LVU369
 1156 0040 0121     		movs	r1, #1
 1157 0042 2046     		mov	r0, r4
 1158 0044 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1159              	.LVL50:
 161:Core/Src/main.c ****         raw_to_gauss = (((raw * 3.3)/ 4095) - 1.60)*1000/1.6; //TODO: change sensibility according 
 1160              		.loc 1 161 9 view .LVU370
 161:Core/Src/main.c ****         raw_to_gauss = (((raw * 3.3)/ 4095) - 1.60)*1000/1.6; //TODO: change sensibility according 
 1161              		.loc 1 161 15 is_stmt 0 view .LVU371
 1162 0048 2046     		mov	r0, r4
 1163 004a FFF7FEFF 		bl	HAL_ADC_GetValue
 1164              	.LVL51:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1165              		.loc 1 162 9 is_stmt 1 view .LVU372
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 41


 1166              		.loc 1 162 31 is_stmt 0 view .LVU373
 1167 004e 80B2     		uxth	r0, r0
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1168              		.loc 1 162 31 view .LVU374
 1169 0050 FFF7FEFF 		bl	__aeabi_i2d
 1170              	.LVL52:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1171              		.loc 1 162 31 view .LVU375
 1172 0054 92A3     		adr	r3, .L93
 1173 0056 D3E90023 		ldrd	r2, [r3]
 1174 005a FFF7FEFF 		bl	__aeabi_dmul
 1175              	.LVL53:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1176              		.loc 1 162 37 view .LVU376
 1177 005e 92A3     		adr	r3, .L93+8
 1178 0060 D3E90023 		ldrd	r2, [r3]
 1179 0064 FFF7FEFF 		bl	__aeabi_ddiv
 1180              	.LVL54:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1181              		.loc 1 162 45 view .LVU377
 1182 0068 91A3     		adr	r3, .L93+16
 1183 006a D3E90023 		ldrd	r2, [r3]
 1184 006e FFF7FEFF 		bl	__aeabi_dsub
 1185              	.LVL55:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1186              		.loc 1 162 52 view .LVU378
 1187 0072 0022     		movs	r2, #0
 1188 0074 9A4B     		ldr	r3, .L93+64
 1189 0076 FFF7FEFF 		bl	__aeabi_dmul
 1190              	.LVL56:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1191              		.loc 1 162 57 view .LVU379
 1192 007a 8DA3     		adr	r3, .L93+16
 1193 007c D3E90023 		ldrd	r2, [r3]
 1194 0080 FFF7FEFF 		bl	__aeabi_ddiv
 1195              	.LVL57:
 162:Core/Src/main.c ****         HAL_ADC_Stop(&hadc1);
 1196              		.loc 1 162 22 view .LVU380
 1197 0084 FFF7FEFF 		bl	__aeabi_d2f
 1198              	.LVL58:
 1199 0088 0546     		mov	r5, r0	@ float
 1200              	.LVL59:
 163:Core/Src/main.c **** 
 1201              		.loc 1 163 9 is_stmt 1 view .LVU381
 1202 008a 2046     		mov	r0, r4
 1203              	.LVL60:
 163:Core/Src/main.c **** 
 1204              		.loc 1 163 9 is_stmt 0 view .LVU382
 1205 008c FFF7FEFF 		bl	HAL_ADC_Stop
 1206              	.LVL61:
 166:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg, strlen(msg), 10);
 1207              		.loc 1 166 9 is_stmt 1 view .LVU383
 166:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg, strlen(msg), 10);
 1208              		.loc 1 166 60 is_stmt 0 view .LVU384
 1209 0090 FFF7FEFF 		bl	HAL_GetTick
 1210              	.LVL62:
 166:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg, strlen(msg), 10);
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 42


 1211              		.loc 1 166 9 view .LVU385
 1212 0094 934B     		ldr	r3, .L93+68
 1213 0096 A3FB0034 		umull	r3, r4, r3, r0
 1214 009a E408     		lsrs	r4, r4, #3
 1215 009c 2846     		mov	r0, r5	@ float
 1216 009e FFF7FEFF 		bl	__aeabi_f2d
 1217              	.LVL63:
 1218 00a2 CDE90001 		strd	r0, [sp]
 1219 00a6 2246     		mov	r2, r4
 1220 00a8 8F49     		ldr	r1, .L93+72
 1221 00aa 35A8     		add	r0, sp, #212
 1222 00ac FFF7FEFF 		bl	sprintf
 1223              	.LVL64:
 167:Core/Src/main.c ****         flag_sensor = 0;
 1224              		.loc 1 167 9 is_stmt 1 view .LVU386
 167:Core/Src/main.c ****         flag_sensor = 0;
 1225              		.loc 1 167 53 is_stmt 0 view .LVU387
 1226 00b0 35A8     		add	r0, sp, #212
 1227 00b2 FFF7FEFF 		bl	strlen
 1228              	.LVL65:
 167:Core/Src/main.c ****         flag_sensor = 0;
 1229              		.loc 1 167 9 view .LVU388
 1230 00b6 0A23     		movs	r3, #10
 1231 00b8 82B2     		uxth	r2, r0
 1232 00ba 35A9     		add	r1, sp, #212
 1233 00bc 8B48     		ldr	r0, .L93+76
 1234 00be FFF7FEFF 		bl	HAL_UART_Transmit
 1235              	.LVL66:
 168:Core/Src/main.c ****         }
 1236              		.loc 1 168 9 is_stmt 1 view .LVU389
 168:Core/Src/main.c ****         }
 1237              		.loc 1 168 21 is_stmt 0 view .LVU390
 1238 00c2 8B4B     		ldr	r3, .L93+80
 1239 00c4 0022     		movs	r2, #0
 1240 00c6 1A60     		str	r2, [r3]
 1241 00c8 59E0     		b	.L76
 1242              	.LVL67:
 1243              	.L92:
 184:Core/Src/main.c ****           flag_undervoltage = 1;
 1244              		.loc 1 184 11 is_stmt 1 view .LVU391
 184:Core/Src/main.c ****           flag_undervoltage = 1;
 1245              		.loc 1 184 17 is_stmt 0 view .LVU392
 1246 00ca 824B     		ldr	r3, .L93+52
 1247 00cc 0422     		movs	r2, #4
 1248 00ce 1A70     		strb	r2, [r3]
 185:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_SET); //enable undervoltage led
 1249              		.loc 1 185 11 is_stmt 1 view .LVU393
 185:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_SET); //enable undervoltage led
 1250              		.loc 1 185 29 is_stmt 0 view .LVU394
 1251 00d0 0122     		movs	r2, #1
 1252 00d2 884B     		ldr	r3, .L93+84
 1253 00d4 1A60     		str	r2, [r3]
 186:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET); //disable overvoltage led
 1254              		.loc 1 186 11 is_stmt 1 view .LVU395
 1255 00d6 884C     		ldr	r4, .L93+88
 1256 00d8 4FF40061 		mov	r1, #2048
 1257 00dc 2046     		mov	r0, r4
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 43


 1258 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 1259              	.LVL68:
 187:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n");
 1260              		.loc 1 187 11 view .LVU396
 1261 00e2 0022     		movs	r2, #0
 1262 00e4 4FF48051 		mov	r1, #4096
 1263 00e8 2046     		mov	r0, r4
 1264 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 1265              	.LVL69:
 188:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10); 
 1266              		.loc 1 188 11 view .LVU397
 1267 00ee 1BAC     		add	r4, sp, #108
 1268 00f0 824D     		ldr	r5, .L93+92
 1269              	.LVL70:
 188:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10); 
 1270              		.loc 1 188 11 is_stmt 0 view .LVU398
 1271 00f2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1272 00f4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1273 00f6 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 1274 00fa 07C4     		stmia	r4!, {r0, r1, r2}
 1275 00fc 2370     		strb	r3, [r4]
 189:Core/Src/main.c **** 
 1276              		.loc 1 189 11 is_stmt 1 view .LVU399
 189:Core/Src/main.c **** 
 1277              		.loc 1 189 66 is_stmt 0 view .LVU400
 1278 00fe 1BA8     		add	r0, sp, #108
 1279 0100 FFF7FEFF 		bl	strlen
 1280              	.LVL71:
 189:Core/Src/main.c **** 
 1281              		.loc 1 189 11 view .LVU401
 1282 0104 0A23     		movs	r3, #10
 1283 0106 82B2     		uxth	r2, r0
 1284 0108 1BA9     		add	r1, sp, #108
 1285 010a 7848     		ldr	r0, .L93+76
 1286 010c FFF7FEFF 		bl	HAL_UART_Transmit
 1287              	.LVL72:
 1288 0110 11E0     		b	.L80
 1289              	.LVL73:
 1290              	.L89:
 200:Core/Src/main.c ****           flag_overvoltage = 0;
 1291              		.loc 1 200 11 is_stmt 1 view .LVU402
 200:Core/Src/main.c ****           flag_overvoltage = 0;
 1292              		.loc 1 200 29 is_stmt 0 view .LVU403
 1293 0112 0024     		movs	r4, #0
 1294 0114 774B     		ldr	r3, .L93+84
 1295 0116 1C60     		str	r4, [r3]
 201:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_RESET); //disable undervoltage led
 1296              		.loc 1 201 11 is_stmt 1 view .LVU404
 201:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_RESET); //disable undervoltage led
 1297              		.loc 1 201 28 is_stmt 0 view .LVU405
 1298 0118 794B     		ldr	r3, .L93+96
 1299 011a 1C60     		str	r4, [r3]
 202:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET); //disable overvoltage led
 1300              		.loc 1 202 11 is_stmt 1 view .LVU406
 1301 011c 764D     		ldr	r5, .L93+88
 1302              	.LVL74:
 202:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET); //disable overvoltage led
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 44


 1303              		.loc 1 202 11 is_stmt 0 view .LVU407
 1304 011e 2246     		mov	r2, r4
 1305 0120 4FF40061 		mov	r1, #2048
 1306 0124 2846     		mov	r0, r5
 1307 0126 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1308              	.LVL75:
 203:Core/Src/main.c ****         }
 1309              		.loc 1 203 11 is_stmt 1 view .LVU408
 1310 012a 2246     		mov	r2, r4
 1311 012c 4FF48051 		mov	r1, #4096
 1312 0130 2846     		mov	r0, r5
 1313 0132 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1314              	.LVL76:
 1315              	.L80:
 205:Core/Src/main.c ****       }
 1316              		.loc 1 205 9 view .LVU409
 205:Core/Src/main.c ****       }
 1317              		.loc 1 205 22 is_stmt 0 view .LVU410
 1318 0136 734B     		ldr	r3, .L93+100
 1319 0138 0022     		movs	r2, #0
 1320 013a 1A60     		str	r2, [r3]
 1321              	.L77:
 208:Core/Src/main.c **** 
 1322              		.loc 1 208 7 is_stmt 1 view .LVU411
 208:Core/Src/main.c **** 
 1323              		.loc 1 208 13 is_stmt 0 view .LVU412
 1324 013c 654B     		ldr	r3, .L93+52
 1325 013e 0122     		movs	r2, #1
 1326 0140 1A70     		strb	r2, [r3]
 210:Core/Src/main.c **** 
 1327              		.loc 1 210 7 is_stmt 1 view .LVU413
 1328              	.L75:
 146:Core/Src/main.c ****   { 
 1329              		.loc 1 146 3 view .LVU414
 149:Core/Src/main.c ****     {
 1330              		.loc 1 149 5 view .LVU415
 1331 0142 644B     		ldr	r3, .L93+52
 1332 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0146 032B     		cmp	r3, #3
 1334 0148 00F08E80 		beq	.L73
 1335 014c 042B     		cmp	r3, #4
 1336 014e 00F0E980 		beq	.L74
 1337 0152 022B     		cmp	r3, #2
 1338 0154 F5D1     		bne	.L75
 153:Core/Src/main.c ****       HAL_UART_Transmit(&hlpuart1, (uint8_t*)state_msg, strlen(state_msg), 10);
 1339              		.loc 1 153 7 view .LVU416
 1340 0156 5C4B     		ldr	r3, .L93+40
 1341 0158 9A68     		ldr	r2, [r3, #8]
 1342 015a 6B49     		ldr	r1, .L93+104
 1343 015c 42A8     		add	r0, sp, #264
 1344 015e FFF7FEFF 		bl	sprintf
 1345              	.LVL77:
 154:Core/Src/main.c **** 
 1346              		.loc 1 154 7 view .LVU417
 154:Core/Src/main.c **** 
 1347              		.loc 1 154 57 is_stmt 0 view .LVU418
 1348 0162 42A8     		add	r0, sp, #264
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 45


 1349 0164 FFF7FEFF 		bl	strlen
 1350              	.LVL78:
 154:Core/Src/main.c **** 
 1351              		.loc 1 154 7 view .LVU419
 1352 0168 0A23     		movs	r3, #10
 1353 016a 82B2     		uxth	r2, r0
 1354 016c 42A9     		add	r1, sp, #264
 1355 016e 5F48     		ldr	r0, .L93+76
 1356 0170 FFF7FEFF 		bl	HAL_UART_Transmit
 1357              	.LVL79:
 157:Core/Src/main.c ****       
 1358              		.loc 1 157 7 is_stmt 1 view .LVU420
 157:Core/Src/main.c ****       
 1359              		.loc 1 157 22 is_stmt 0 view .LVU421
 1360 0174 5E4B     		ldr	r3, .L93+80
 1361 0176 1B68     		ldr	r3, [r3]
 157:Core/Src/main.c ****       
 1362              		.loc 1 157 9 view .LVU422
 1363 0178 012B     		cmp	r3, #1
 1364 017a 3FF45DAF 		beq	.L91
 1365              	.L76:
 172:Core/Src/main.c ****         //read voltage
 1366              		.loc 1 172 7 is_stmt 1 view .LVU423
 172:Core/Src/main.c ****         //read voltage
 1367              		.loc 1 172 23 is_stmt 0 view .LVU424
 1368 017e 614B     		ldr	r3, .L93+100
 1369 0180 1B68     		ldr	r3, [r3]
 172:Core/Src/main.c ****         //read voltage
 1370              		.loc 1 172 9 view .LVU425
 1371 0182 012B     		cmp	r3, #1
 1372 0184 DAD1     		bne	.L77
 174:Core/Src/main.c ****         HAL_ADC_PollForConversion(&hadc2, 1); 
 1373              		.loc 1 174 9 is_stmt 1 view .LVU426
 1374 0186 614C     		ldr	r4, .L93+108
 1375 0188 2046     		mov	r0, r4
 1376 018a FFF7FEFF 		bl	HAL_ADC_Start
 1377              	.LVL80:
 175:Core/Src/main.c ****         raw_voltage = HAL_ADC_GetValue(&hadc2);
 1378              		.loc 1 175 9 view .LVU427
 1379 018e 0121     		movs	r1, #1
 1380 0190 2046     		mov	r0, r4
 1381 0192 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 1382              	.LVL81:
 176:Core/Src/main.c ****         raw_voltage_volt = (raw_voltage * 3.3) / 4095; //convert to volt
 1383              		.loc 1 176 9 view .LVU428
 176:Core/Src/main.c ****         raw_voltage_volt = (raw_voltage * 3.3) / 4095; //convert to volt
 1384              		.loc 1 176 23 is_stmt 0 view .LVU429
 1385 0196 2046     		mov	r0, r4
 1386 0198 FFF7FEFF 		bl	HAL_ADC_GetValue
 1387              	.LVL82:
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1388              		.loc 1 177 9 is_stmt 1 view .LVU430
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1389              		.loc 1 177 41 is_stmt 0 view .LVU431
 1390 019c 80B2     		uxth	r0, r0
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1391              		.loc 1 177 41 view .LVU432
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 46


 1392 019e FFF7FEFF 		bl	__aeabi_i2d
 1393              	.LVL83:
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1394              		.loc 1 177 41 view .LVU433
 1395 01a2 3FA3     		adr	r3, .L93
 1396 01a4 D3E90023 		ldrd	r2, [r3]
 1397 01a8 FFF7FEFF 		bl	__aeabi_dmul
 1398              	.LVL84:
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1399              		.loc 1 177 48 view .LVU434
 1400 01ac 3EA3     		adr	r3, .L93+8
 1401 01ae D3E90023 		ldrd	r2, [r3]
 1402 01b2 FFF7FEFF 		bl	__aeabi_ddiv
 1403              	.LVL85:
 177:Core/Src/main.c ****         HAL_ADC_Stop(&hadc2);
 1404              		.loc 1 177 26 view .LVU435
 1405 01b6 FFF7FEFF 		bl	__aeabi_d2f
 1406              	.LVL86:
 1407 01ba 0546     		mov	r5, r0	@ float
 1408              	.LVL87:
 178:Core/Src/main.c ****         
 1409              		.loc 1 178 9 is_stmt 1 view .LVU436
 1410 01bc 2046     		mov	r0, r4
 1411              	.LVL88:
 178:Core/Src/main.c ****         
 1412              		.loc 1 178 9 is_stmt 0 view .LVU437
 1413 01be FFF7FEFF 		bl	HAL_ADC_Stop
 1414              	.LVL89:
 180:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg_voltage, strlen(msg_voltage), 10);
 1415              		.loc 1 180 9 is_stmt 1 view .LVU438
 180:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg_voltage, strlen(msg_voltage), 10);
 1416              		.loc 1 180 62 is_stmt 0 view .LVU439
 1417 01c2 FFF7FEFF 		bl	HAL_GetTick
 1418              	.LVL90:
 1419 01c6 0446     		mov	r4, r0
 180:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)msg_voltage, strlen(msg_voltage), 10);
 1420              		.loc 1 180 9 view .LVU440
 1421 01c8 2846     		mov	r0, r5	@ float
 1422 01ca FFF7FEFF 		bl	__aeabi_f2d
 1423              	.LVL91:
 1424 01ce 0646     		mov	r6, r0
 1425 01d0 0F46     		mov	r7, r1
 1426 01d2 444B     		ldr	r3, .L93+68
 1427 01d4 A3FB0432 		umull	r3, r2, r3, r4
 1428 01d8 CDE90067 		strd	r6, [sp]
 1429 01dc D208     		lsrs	r2, r2, #3
 1430 01de 4C49     		ldr	r1, .L93+112
 1431 01e0 28A8     		add	r0, sp, #160
 1432 01e2 FFF7FEFF 		bl	sprintf
 1433              	.LVL92:
 181:Core/Src/main.c **** 
 1434              		.loc 1 181 9 is_stmt 1 view .LVU441
 181:Core/Src/main.c **** 
 1435              		.loc 1 181 61 is_stmt 0 view .LVU442
 1436 01e6 28A8     		add	r0, sp, #160
 1437 01e8 FFF7FEFF 		bl	strlen
 1438              	.LVL93:
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 47


 181:Core/Src/main.c **** 
 1439              		.loc 1 181 9 view .LVU443
 1440 01ec 0A23     		movs	r3, #10
 1441 01ee 82B2     		uxth	r2, r0
 1442 01f0 28A9     		add	r1, sp, #160
 1443 01f2 3E48     		ldr	r0, .L93+76
 1444 01f4 FFF7FEFF 		bl	HAL_UART_Transmit
 1445              	.LVL94:
 183:Core/Src/main.c ****           state = DANGER_STATE;
 1446              		.loc 1 183 9 is_stmt 1 view .LVU444
 183:Core/Src/main.c ****           state = DANGER_STATE;
 1447              		.loc 1 183 11 is_stmt 0 view .LVU445
 1448 01f8 2FA3     		adr	r3, .L93+24
 1449 01fa D3E90023 		ldrd	r2, [r3]
 1450 01fe 3046     		mov	r0, r6
 1451 0200 3946     		mov	r1, r7
 1452 0202 FFF7FEFF 		bl	__aeabi_dcmplt
 1453              	.LVL95:
 1454 0206 0028     		cmp	r0, #0
 1455 0208 7FF45FAF 		bne	.L92
 191:Core/Src/main.c ****           state = DANGER_STATE;
 1456              		.loc 1 191 16 is_stmt 1 view .LVU446
 191:Core/Src/main.c ****           state = DANGER_STATE;
 1457              		.loc 1 191 19 is_stmt 0 view .LVU447
 1458 020c 2CA3     		adr	r3, .L93+32
 1459 020e D3E90023 		ldrd	r2, [r3]
 1460 0212 3046     		mov	r0, r6
 1461 0214 3946     		mov	r1, r7
 1462 0216 FFF7FEFF 		bl	__aeabi_dcmpgt
 1463              	.LVL96:
 1464 021a 0028     		cmp	r0, #0
 1465 021c 3FF479AF 		beq	.L89
 192:Core/Src/main.c ****           flag_overvoltage = 1;
 1466              		.loc 1 192 11 is_stmt 1 view .LVU448
 192:Core/Src/main.c ****           flag_overvoltage = 1;
 1467              		.loc 1 192 17 is_stmt 0 view .LVU449
 1468 0220 2C4B     		ldr	r3, .L93+52
 1469 0222 0422     		movs	r2, #4
 1470 0224 1A70     		strb	r2, [r3]
 193:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_SET); //enable overvoltage led
 1471              		.loc 1 193 11 is_stmt 1 view .LVU450
 193:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_SET); //enable overvoltage led
 1472              		.loc 1 193 28 is_stmt 0 view .LVU451
 1473 0226 0122     		movs	r2, #1
 1474 0228 354B     		ldr	r3, .L93+96
 1475 022a 1A60     		str	r2, [r3]
 194:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOC, GPIO_PIN_11, GPIO_PIN_RESET); //disable undervoltage led
 1476              		.loc 1 194 11 is_stmt 1 view .LVU452
 1477 022c 324C     		ldr	r4, .L93+88
 1478 022e 4FF48051 		mov	r1, #4096
 1479 0232 2046     		mov	r0, r4
 1480 0234 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1481              	.LVL97:
 195:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n");
 1482              		.loc 1 195 11 view .LVU453
 1483 0238 0022     		movs	r2, #0
 1484 023a 4FF40061 		mov	r1, #2048
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 48


 1485 023e 2046     		mov	r0, r4
 1486 0240 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1487              	.LVL98:
 196:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10);
 1488              		.loc 1 196 11 view .LVU454
 1489 0244 1BAC     		add	r4, sp, #108
 1490 0246 334D     		ldr	r5, .L93+116
 1491              	.LVL99:
 196:Core/Src/main.c ****           HAL_UART_Transmit(&hlpuart1, (uint8_t*)danger_message, strlen(danger_message), 10);
 1492              		.loc 1 196 11 is_stmt 0 view .LVU455
 1493 0248 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1494 024a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1495 024c 95E80700 		ldm	r5, {r0, r1, r2}
 1496 0250 84E80700 		stm	r4, {r0, r1, r2}
 197:Core/Src/main.c **** 
 1497              		.loc 1 197 11 is_stmt 1 view .LVU456
 197:Core/Src/main.c **** 
 1498              		.loc 1 197 66 is_stmt 0 view .LVU457
 1499 0254 1BA8     		add	r0, sp, #108
 1500 0256 FFF7FEFF 		bl	strlen
 1501              	.LVL100:
 197:Core/Src/main.c **** 
 1502              		.loc 1 197 11 view .LVU458
 1503 025a 0A23     		movs	r3, #10
 1504 025c 82B2     		uxth	r2, r0
 1505 025e 1BA9     		add	r1, sp, #108
 1506 0260 2248     		ldr	r0, .L93+76
 1507 0262 FFF7FEFF 		bl	HAL_UART_Transmit
 1508              	.LVL101:
 1509 0266 66E7     		b	.L80
 1510              	.L73:
 218:Core/Src/main.c ****         sprintf(waiting_message, "(%lu)Board in waiting state - please press the emergency button\r
 1511              		.loc 1 218 7 is_stmt 1 view .LVU459
 218:Core/Src/main.c ****         sprintf(waiting_message, "(%lu)Board in waiting state - please press the emergency button\r
 1512              		.loc 1 218 31 is_stmt 0 view .LVU460
 1513 0268 2B4B     		ldr	r3, .L93+120
 1514 026a 1B68     		ldr	r3, [r3]
 218:Core/Src/main.c ****         sprintf(waiting_message, "(%lu)Board in waiting state - please press the emergency button\r
 1515              		.loc 1 218 9 view .LVU461
 1516 026c 012B     		cmp	r3, #1
 1517 026e 7FF468AF 		bne	.L75
 219:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)waiting_message, strlen(waiting_message), 10);
 1518              		.loc 1 219 9 is_stmt 1 view .LVU462
 219:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)waiting_message, strlen(waiting_message), 10);
 1519              		.loc 1 219 105 is_stmt 0 view .LVU463
 1520 0272 FFF7FEFF 		bl	HAL_GetTick
 1521              	.LVL102:
 219:Core/Src/main.c ****         HAL_UART_Transmit(&hlpuart1, (uint8_t*)waiting_message, strlen(waiting_message), 10);
 1522              		.loc 1 219 9 view .LVU464
 1523 0276 294B     		ldr	r3, .L93+124
 1524 0278 A3FB0032 		umull	r3, r2, r3, r0
 1525 027c 5209     		lsrs	r2, r2, #5
 1526 027e 2849     		ldr	r1, .L93+128
 1527 0280 02A8     		add	r0, sp, #8
 1528 0282 FFF7FEFF 		bl	sprintf
 1529              	.LVL103:
 220:Core/Src/main.c ****         flag_waiting_message = 0;
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 49


 1530              		.loc 1 220 9 is_stmt 1 view .LVU465
 220:Core/Src/main.c ****         flag_waiting_message = 0;
 1531              		.loc 1 220 65 is_stmt 0 view .LVU466
 1532 0286 02A8     		add	r0, sp, #8
 1533 0288 FFF7FEFF 		bl	strlen
 1534              	.LVL104:
 220:Core/Src/main.c ****         flag_waiting_message = 0;
 1535              		.loc 1 220 9 view .LVU467
 1536 028c 0A23     		movs	r3, #10
 1537 028e 82B2     		uxth	r2, r0
 1538 0290 02A9     		add	r1, sp, #8
 1539 0292 1648     		ldr	r0, .L93+76
 1540 0294 FFF7FEFF 		bl	HAL_UART_Transmit
 1541              	.LVL105:
 221:Core/Src/main.c ****       }
 1542              		.loc 1 221 9 is_stmt 1 view .LVU468
 221:Core/Src/main.c ****       }
 1543              		.loc 1 221 30 is_stmt 0 view .LVU469
 1544 0298 1F4B     		ldr	r3, .L93+120
 1545 029a 0022     		movs	r2, #0
 1546 029c 1A60     		str	r2, [r3]
 1547 029e 50E7     		b	.L75
 1548              	.L94:
 1549              		.align	3
 1550              	.L93:
 1551 02a0 66666666 		.word	1717986918
 1552 02a4 66660A40 		.word	1074423398
 1553 02a8 00000000 		.word	0
 1554 02ac 00FEAF40 		.word	1085275648
 1555 02b0 9A999999 		.word	-1717986918
 1556 02b4 9999F93F 		.word	1073322393
 1557 02b8 CDCCCCCC 		.word	-858993459
 1558 02bc CCCCFC3F 		.word	1073532108
 1559 02c0 9A999999 		.word	-1717986918
 1560 02c4 99990140 		.word	1073846681
 1561 02c8 00000000 		.word	.LANCHOR10
 1562 02cc 00000000 		.word	.LC0
 1563 02d0 0C000000 		.word	.LC1
 1564 02d4 00000000 		.word	.LANCHOR3
 1565 02d8 00000000 		.word	.LANCHOR8
 1566 02dc 00000000 		.word	.LANCHOR7
 1567 02e0 00408F40 		.word	1083129856
 1568 02e4 CDCCCCCC 		.word	-858993459
 1569 02e8 2C000000 		.word	.LC3
 1570 02ec 00000000 		.word	.LANCHOR6
 1571 02f0 00000000 		.word	.LANCHOR2
 1572 02f4 00000000 		.word	.LANCHOR11
 1573 02f8 00080048 		.word	1207961600
 1574 02fc 6C000000 		.word	.LC5
 1575 0300 00000000 		.word	.LANCHOR12
 1576 0304 00000000 		.word	.LANCHOR4
 1577 0308 1C000000 		.word	.LC2
 1578 030c 00000000 		.word	.LANCHOR9
 1579 0310 50000000 		.word	.LC4
 1580 0314 8C000000 		.word	.LC6
 1581 0318 00000000 		.word	.LANCHOR5
 1582 031c 1F85EB51 		.word	1374389535
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 50


 1583 0320 A8000000 		.word	.LC7
 1584              	.L74:
 227:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n"); //TODO: controllare che funzio
 1585              		.loc 1 227 9 is_stmt 1 view .LVU470
 227:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n"); //TODO: controllare che funzio
 1586              		.loc 1 227 13 is_stmt 0 view .LVU471
 1587 0324 124B     		ldr	r3, .L95
 1588 0326 1B68     		ldr	r3, [r3]
 227:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: undervoltage\r\n"); //TODO: controllare che funzio
 1589              		.loc 1 227 12 view .LVU472
 1590 0328 ABB1     		cbz	r3, .L84
 228:Core/Src/main.c ****         } else if (flag_overvoltage){
 1591              		.loc 1 228 11 is_stmt 1 view .LVU473
 1592 032a 0DF16C0C 		add	ip, sp, #108
 1593 032e 114C     		ldr	r4, .L95+4
 1594 0330 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1595 0332 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1596 0336 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1597 033a ACE80700 		stmia	ip!, {r0, r1, r2}
 1598 033e 8CF80030 		strb	r3, [ip]
 1599              	.L85:
 232:Core/Src/main.c ****       break;
 1600              		.loc 1 232 9 view .LVU474
 232:Core/Src/main.c ****       break;
 1601              		.loc 1 232 64 is_stmt 0 view .LVU475
 1602 0342 1BA8     		add	r0, sp, #108
 1603 0344 FFF7FEFF 		bl	strlen
 1604              	.LVL106:
 232:Core/Src/main.c ****       break;
 1605              		.loc 1 232 9 view .LVU476
 1606 0348 0A23     		movs	r3, #10
 1607 034a 82B2     		uxth	r2, r0
 1608 034c 1BA9     		add	r1, sp, #108
 1609 034e 0A48     		ldr	r0, .L95+8
 1610 0350 FFF7FEFF 		bl	HAL_UART_Transmit
 1611              	.LVL107:
 233:Core/Src/main.c **** 
 1612              		.loc 1 233 7 is_stmt 1 view .LVU477
 1613 0354 F5E6     		b	.L75
 1614              	.L84:
 229:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n"); //TODO: controllare che funzion
 1615              		.loc 1 229 16 view .LVU478
 229:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n"); //TODO: controllare che funzion
 1616              		.loc 1 229 20 is_stmt 0 view .LVU479
 1617 0356 094B     		ldr	r3, .L95+12
 1618 0358 1B68     		ldr	r3, [r3]
 229:Core/Src/main.c ****           sprintf(danger_message, "DANGER STATE: overvoltage\r\n"); //TODO: controllare che funzion
 1619              		.loc 1 229 19 view .LVU480
 1620 035a 002B     		cmp	r3, #0
 1621 035c F1D0     		beq	.L85
 230:Core/Src/main.c ****         }
 1622              		.loc 1 230 11 is_stmt 1 view .LVU481
 1623 035e 1BAC     		add	r4, sp, #108
 1624 0360 074D     		ldr	r5, .L95+16
 1625 0362 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1626 0364 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1627 0366 95E80700 		ldm	r5, {r0, r1, r2}
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 51


 1628 036a 84E80700 		stm	r4, {r0, r1, r2}
 1629 036e E8E7     		b	.L85
 1630              	.L96:
 1631              		.align	2
 1632              	.L95:
 1633 0370 00000000 		.word	.LANCHOR11
 1634 0374 6C000000 		.word	.LC5
 1635 0378 00000000 		.word	.LANCHOR6
 1636 037c 00000000 		.word	.LANCHOR12
 1637 0380 8C000000 		.word	.LC6
 1638              		.cfi_endproc
 1639              	.LFE332:
 1641              		.global	state_names
 1642              		.global	state
 1643              		.global	flag_overvoltage
 1644              		.global	flag_undervoltage
 1645              		.global	flag_waiting_message
 1646              		.global	flag_button
 1647              		.global	flag_voltage
 1648              		.global	flag_sensor
 1649              		.global	timer_lap
 1650              		.global	htim6
 1651              		.global	hlpuart1
 1652              		.global	hadc2
 1653              		.global	hadc1
 1654              		.section	.bss.flag_button,"aw",%nobits
 1655              		.align	2
 1656              		.set	.LANCHOR1,. + 0
 1659              	flag_button:
 1660 0000 00000000 		.space	4
 1661              		.section	.bss.flag_overvoltage,"aw",%nobits
 1662              		.align	2
 1663              		.set	.LANCHOR12,. + 0
 1666              	flag_overvoltage:
 1667 0000 00000000 		.space	4
 1668              		.section	.bss.flag_sensor,"aw",%nobits
 1669              		.align	2
 1670              		.set	.LANCHOR2,. + 0
 1673              	flag_sensor:
 1674 0000 00000000 		.space	4
 1675              		.section	.bss.flag_undervoltage,"aw",%nobits
 1676              		.align	2
 1677              		.set	.LANCHOR11,. + 0
 1680              	flag_undervoltage:
 1681 0000 00000000 		.space	4
 1682              		.section	.bss.flag_voltage,"aw",%nobits
 1683              		.align	2
 1684              		.set	.LANCHOR4,. + 0
 1687              	flag_voltage:
 1688 0000 00000000 		.space	4
 1689              		.section	.bss.flag_waiting_message,"aw",%nobits
 1690              		.align	2
 1691              		.set	.LANCHOR5,. + 0
 1694              	flag_waiting_message:
 1695 0000 00000000 		.space	4
 1696              		.section	.bss.hadc1,"aw",%nobits
 1697              		.align	2
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 52


 1698              		.set	.LANCHOR7,. + 0
 1701              	hadc1:
 1702 0000 00000000 		.space	108
 1702      00000000 
 1702      00000000 
 1702      00000000 
 1702      00000000 
 1703              		.section	.bss.hadc2,"aw",%nobits
 1704              		.align	2
 1705              		.set	.LANCHOR9,. + 0
 1708              	hadc2:
 1709 0000 00000000 		.space	108
 1709      00000000 
 1709      00000000 
 1709      00000000 
 1709      00000000 
 1710              		.section	.bss.hlpuart1,"aw",%nobits
 1711              		.align	2
 1712              		.set	.LANCHOR6,. + 0
 1715              	hlpuart1:
 1716 0000 00000000 		.space	144
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1716      00000000 
 1717              		.section	.bss.htim6,"aw",%nobits
 1718              		.align	2
 1719              		.set	.LANCHOR8,. + 0
 1722              	htim6:
 1723 0000 00000000 		.space	76
 1723      00000000 
 1723      00000000 
 1723      00000000 
 1723      00000000 
 1724              		.section	.bss.state,"aw",%nobits
 1725              		.set	.LANCHOR3,. + 0
 1728              	state:
 1729 0000 00       		.space	1
 1730              		.section	.bss.state_names,"aw",%nobits
 1731              		.align	2
 1732              		.set	.LANCHOR10,. + 0
 1735              	state_names:
 1736 0000 00000000 		.space	20
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1736      00000000 
 1737              		.section	.bss.timer_lap,"aw",%nobits
 1738              		.align	2
 1739              		.set	.LANCHOR0,. + 0
 1742              	timer_lap:
 1743 0000 00000000 		.space	4
 1744              		.text
 1745              	.Letext0:
 1746              		.file 3 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 1747              		.file 4 "/Users/riccardobenevelli/Library/Application Support/Code/User/globalStorage/bmd.stm32-fo
 1748              		.file 5 "/Users/riccardobenevelli/Library/Application Support/Code/User/globalStorage/bmd.stm32-fo
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 53


 1749              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 1750              		.file 7 "/Users/riccardobenevelli/Library/Application Support/Code/User/globalStorage/bmd.stm32-fo
 1751              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 1752              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 1753              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 1754              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 1755              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 1756              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 1757              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 1758              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 1759              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 1760              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 1761              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 1762              		.file 19 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 1763              		.file 20 "/Users/riccardobenevelli/Library/Application Support/Code/User/globalStorage/bmd.stm32-f
 1764              		.file 21 "/Users/riccardobenevelli/Library/Application Support/Code/User/globalStorage/bmd.stm32-f
 1765              		.file 22 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 1766              		.file 23 "<built-in>"
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:20     .text.MX_GPIO_Init:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:193    .text.MX_GPIO_Init:00000000000000c8 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:199    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:205    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:312    .text.HAL_TIM_PeriodElapsedCallback:0000000000000080 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:325    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:331    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:386    .text.HAL_GPIO_EXTI_Callback:0000000000000034 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:393    .text.Error_Handler:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:399    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:431    .text.MX_LPUART1_UART_Init:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:436    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:531    .text.MX_LPUART1_UART_Init:0000000000000058 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:537    .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:542    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:691    .text.MX_ADC1_Init:0000000000000090 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:697    .text.MX_TIM6_Init:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:702    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:777    .text.MX_TIM6_Init:0000000000000048 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:783    .text.MX_ADC2_Init:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:788    .text.MX_ADC2_Init:0000000000000000 MX_ADC2_Init
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:915    .text.MX_ADC2_Init:0000000000000078 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:922    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:928    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1045   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1079   .text.main:0000000000000000 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1085   .text.main:0000000000000000 main
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1551   .text.main:00000000000002a0 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1587   .text.main:0000000000000324 $t
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1633   .text.main:0000000000000370 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1735   .bss.state_names:0000000000000000 state_names
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1728   .bss.state:0000000000000000 state
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1666   .bss.flag_overvoltage:0000000000000000 flag_overvoltage
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1680   .bss.flag_undervoltage:0000000000000000 flag_undervoltage
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1694   .bss.flag_waiting_message:0000000000000000 flag_waiting_message
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1659   .bss.flag_button:0000000000000000 flag_button
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1687   .bss.flag_voltage:0000000000000000 flag_voltage
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1673   .bss.flag_sensor:0000000000000000 flag_sensor
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1742   .bss.timer_lap:0000000000000000 timer_lap
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1722   .bss.htim6:0000000000000000 htim6
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1715   .bss.hlpuart1:0000000000000000 hlpuart1
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1708   .bss.hadc2:0000000000000000 hadc2
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1701   .bss.hadc1:0000000000000000 hadc1
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1655   .bss.flag_button:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1662   .bss.flag_overvoltage:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1669   .bss.flag_sensor:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1676   .bss.flag_undervoltage:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1683   .bss.flag_voltage:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1690   .bss.flag_waiting_message:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1697   .bss.hadc1:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1704   .bss.hadc2:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1711   .bss.hlpuart1:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1718   .bss.htim6:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1729   .bss.state:0000000000000000 $d
ARM GAS  /var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s 			page 55


/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1731   .bss.state_names:0000000000000000 $d
/var/folders/v4/thyb7fs93y7cf8_ncbsg8d0c0000gn/T//ccxFemUX.s:1738   .bss.timer_lap:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_TogglePin
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2f
__aeabi_f2d
__aeabi_dcmplt
__aeabi_dcmpgt
HAL_Init
HAL_TIM_Base_Start_IT
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
HAL_GetTick
sprintf
strlen
HAL_UART_Transmit
